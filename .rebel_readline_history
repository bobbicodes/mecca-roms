1572578249940:(require 'mecca.music)
1572578260178:(in-ns 'mecca.music)
1572578278687:@(subscribe [:audio-context])
1572588058735:(require 'goog.object)
1572588102792:(def obj #js {:foo #js {:bar 2}})
1572588113633:(goog.object/get obj "foo")
1572588124780:(goog.object/getValueByKeys obj "foo" "bar")
1572588536683:(require 'mecca.music)
1572588543030:(in-ns 'mecca.music)
1572588564090:@(subscribe [:file-upload])
1572590438789:(def mymid @(subscribe [:file-upload]))
1572590443051:mymid
1572591100636:(let [reader (js/FileReader.)\n      file mymid]\n  (.readAsArrayBuffer reader file))
1572591165960:(let [reader (js/FileReader.)\n      file mymid]\n  (set! (.-onload reader) (-> reader .-result))\n  (.readAsArrayBuffer reader file))
1572591228955:(.readAsArrayBuffer mymid)
1572593376634:@(subscribe [:file-upload])
1572594035128:(require 'goog.crypt)
1572594126533:(goog.crypt/byteArrayToHex @(subscribe [:file-upload]))
1572816550018:(require 'mecca.view)
1572816559315:(in-ns 'mecca.view)
1572816588506:@(subscribe [:file-upload])
1572816616513:(take 6 *1)
1572816635352:(take 10 *1)
1572816657682:(take 10 @(subscribe [:file-upload]))
1572816683579:(apply str (take 10 @(subscribe [:file-upload])))
1572831527862:(let [file @(subscribe [:file-upload])]\n  file)
1572831540567:(require 'mecca.view)
1572831546889:(in-ns 'mecca.view)
1572831550539:(let [file @(subscribe [:file-upload])]\n  file)
1572831572681:(let [file @(subscribe [:file-upload])]\n  (partition 2 file))
1572831649725:(let [file @(subscribe [:file-upload])]\n  (take 10 (partition 2 file)))
1572831677495:(let [file @(subscribe [:file-upload])]\n  (take 10 (apply str (partition 2 file))))
1572831686948:(let [file @(subscribe [:file-upload])]\n  (take 10 (str (partition 2 file))))
1572831695392:(let [file @(subscribe [:file-upload])]\n  (take 10 (partition 2 file)))
1572831739272:(let [file @(subscribe [:file-upload])]\n  (take 10 (map str (partition 2 file))))
1572831762773:(let [file @(subscribe [:file-upload])]\n  (take 10 (apply map str (partition 2 file))))
1572831771503:(let [file @(subscribe [:file-upload])]\n  (take 10 (apply str (partition 2 file))))
1572831779062:(let [file @(subscribe [:file-upload])]\n  (take 10 (partition 2 file)))
1572831813466:(let [file @(subscribe [:file-upload])]\n  (map str (take 10 (partition 2 file))))
1572831835331:(let [file @(subscribe [:file-upload])]\n  (map apply str (take 10 (partition 2 file))))
1572831839063:(let [file @(subscribe [:file-upload])]\n  (map str (take 10 (partition 2 file))))
1572831861090:(let [file @(subscribe [:file-upload])]\n  (take 10 (partition 2 file)))
1572831879523:(let [file @(subscribe [:file-upload])]\n  (first (partition 2 file)))
1572831902900:(let [file @(subscribe [:file-upload])]\n  (apply str (first (partition 2 file))))
1572832437890:(let [file @(subscribe [:file-upload])]\n  (first (drop 10 (partition 2 file))))
1572832475193:(let [file @(subscribe [:file-upload])]\n  (first (drop 1 (partition 2 file))))
1572832484490:(let [file @(subscribe [:file-upload])]\n  (first (drop 0 (partition 2 file))))
1572832613237:(get-offset 0)
1572832885552:(crypt/hexToByteArray "4e45534d1a")
1572832951754:(crypt/byteArrayToString (crypt/hexToByteArray "4e45534d1a"))
1572835787721:(require 'mecca.view)
1572835802102:(in-ns 'mecca.view)
1572835837243:(let [file @(subscribe [:file-upload])]\n  file)
1572836028213:(require 'mecca.asterix)
1572841217808:0x123
1572841722872:010
1572841741174:10
1572841748841:010
1572841826750:0e
1572841872026:0x0e
1572899687994:(require 'mecca.view)
1572899698431:(in-ns 'mecca.view)
1572899708491:(str " " (get-offset 0)\n                     " " (get-offset 1)\n                     " " (get-offset 2)\n                     " " (get-offset 3)\n                     " " (get-offset 4))
1572899809048:(def myfile @(subscribe [:file-upload]))
1572899845135:(first (drop n (partition 2 myfile)))
1572900070534:(require 'mecca.view)
1572900075775:(in-ns 'mecca.view)
1572900085982:(def myfile @(subscribe [:file-upload]))
1572900137284:(first (drop 0x05 (partition 2 myfile)))
1572900289378:(defn offsets [from to] (take (- to from) (drop from (partition 2 myfile))))
1572900329385:(offsets 0 4)
1572900571525:(defn offsets [from to] (apply str (take (- to from) (drop from (partition 2 myfile)))))
1572900573972:(offsets 0 4)
1572900603642:(defn offsets [from to] (str (take (- to from) (drop from (partition 2 myfile)))))
1572900605348:(offsets 0 4)
1572900625882:(defn offsets [from to] (take (- to from) (drop from (partition 2 myfile))))
1572900627918:(offsets 0 4)
1572900686035:(partition 2 myfile)
1572900709878:myfile
1572900769411:(offsets 0 4)
1572900851012:(take (- 8 0) (drop 0 myfile))
1572900973083:(partition 2 (take (- 8 0) (drop 0 myfile)))
1572901013972:(map #(apply str %) (partition 2 (take (- 8 0) (drop 0 myfile))))
1572901239437:(def myfile @(subscribe [:file-upload]))
1572901243266:myfile
1572901246650:(map #(apply str %) (partition 2 (take (- 8 0) (drop 0 myfile))))
1572901273978:(interpose " " (map #(apply str %) (partition 2 (take (- 8 0) (drop 0 myfile)))))
1572901292100:(str (interpose " " (map #(apply str %) (partition 2 (take (- 8 0) (drop 0 myfile))))))
1572901308318:(apply str (interpose " " (map #(apply str %) (partition 2 (take (- 8 0) (drop 0 myfile))))))
1572902076475:(require 'mecca.asterix)
1572902131074:(.toUppercase mecca.asterix/asterix-hex)
1572902148927:mecca.asterix/asterix-hex
1572902172649:(.toUpperCase *1)
1572904388932:(offsets 0x00 0x05)
1572904432049:(apply str (offsets 0x00 0x05))
1572904504715:(offsets 0x00 0x05)
1572904601100:(offsets 0x05 0x06)
1572904615699:(get-offset 0x05)
1572904707336:(hex->ascii (get-offset 0x05))
1572904718490:(hex->ascii (offset 0x05))
1572905295592:(offsets-table)
1572905570941:(for [[from to] [[0x00 0x04] [0x05 0x06]]]\n  [:td.tg-hmp3 (str from " - " to)]\n                 [:td.tg-hmp3 (apply str (interpose " " (offsets from to)))]\n                 [:td.tg-hmp3 (hex->ascii (offsets from to))])
1572905638072:(for [[from to] [[0x00 0x04] [0x05 0x06]]]\n  [[:td.tg-hmp3 (str from " - " to)]\n                 [:td.tg-hmp3 (apply str (interpose " " (offsets from to)))]\n                 [:td.tg-hmp3 (hex->ascii (offsets from to))]])
1572905662521:(into [] *1)
1572905957954:(offsets-table)
1572906247761:(for [[from to] [[0x00 0x04] [0x05 0x06]] [[:td.tg-hmp3 (str from " - " to)]\n                                                    [:td.tg-hmp3 (apply str (interpose " " (offsets from to)))]\n                                                    [:td.tg-hmp3 (hex->ascii (offsets from to))]])
1572906256516:(for [[from to] [[0x00 0x04] [0x05 0x06]] [[:td.tg-hmp3 (str from " - " to)]\n                                                    [:td.tg-hmp3 (apply str (interpose " " (offsets from to)))]\n                                                    [:td.tg-hmp3 (hex->ascii (offsets from to))])
1572906270664:(for [[from to] [[0x00 0x04] [0x05 0x06]] [[:td.tg-hmp3 (str from " - " to)]\n                                                    [:td.tg-hmp3 (apply str (interpose " " (offsets from to)))]\n                                                    [:td.tg-hmp3 (hex->ascii (offsets from to))]])
1572906322963:(for [[from to] [[0x00 0x04] [0x05 0x06]]] [[:td.tg-hmp3 (str from " - " to)]\n                                                    [:td.tg-hmp3 (apply str (interpose " " (offsets from to)))]\n                                                    [:td.tg-hmp3 (hex->ascii (offsets from to))]])
1572906393173:(into [:tr] (first *1))
1572906578437:(into [:tr] (second *1))
1572906597871:(into [:tr] (first *1))
1572906712978:(for [[from to] [[0x00 0x04] [0x05 0x06]]] [[:td.tg-hmp3 (str from " - " to)]\n                                                    [:td.tg-hmp3 (apply str (interpose " " (offsets from to)))]\n                                                    [:td.tg-hmp3 (hex->ascii (offsets from to))]])
1572906741630:(require 'mecca.view)
1572906752413:(in-ns 'mecca.view)
1572906755420:(for [[from to] [[0x00 0x04] [0x05 0x06]]] [[:td.tg-hmp3 (str from " - " to)]\n                                                    [:td.tg-hmp3 (apply str (interpose " " (offsets from to)))]\n                                                    [:td.tg-hmp3 (hex->ascii (offsets from to))]])
1572906774440:(first *1)
1572906821958:(into [:tr] ([[:td.tg-hmp3 "0 - 4"] [:td.tg-hmp3 ""] [:td.tg-hmp3 ""]] [[:td.tg-hmp3 "5 - 6"] [:td.tg-hmp3 ""] [:td.tg-hmp3 ""]]))
1572907862706:(require 'mecca.view)
1572907873964:(in-ns 'mecca.view)
1572907883384:(into [:tr] ([[:td.tg-hmp3 "0 - 4"] [:td.tg-hmp3 ""] [:td.tg-hmp3 ""]] [[:td.tg-hmp3 "5 - 6"] [:td.tg-hmp3 ""] [:td.tg-hmp3 ""]]))
1572909589218:0123
1572910478682:(require 'mecca.view)
1572910483724:(in-ns 'mecca.view)
1572910506141:0x00
1572910521576:(ascii->hex 0)
1572910551253:0x00
1572910556743:(ascii->hex 0)
1572910699160:(.toString 0 16)
1572910937160:(.toString 67 16)
1572910963734:(.toString 16 0)
1572910984930:(.toString 10 16)
1572919540288:0x80
1572921802971:(require 'mecca.view)
1572921810592:(in-ns 'mecca.view)
1572921824445:(offset 0x7b)
1572921924229:(first (offset 0x7b))
1572931854365:(.toString 8 16)
1572931887013:(.toString 1 2)
1572931896102:(.toString 2 2)
1572932375663:(nth (.toString 2 2) 1)
1572932391552:(nth (.toString 2 2) 2)
1572933760268:0x40ff
1572933799090:0x411a
1572933900573:(require 'mecca.view)
1572933905910:(in-ns 'mecca.view)
1572933915027:(offsets 0x78 0x7a)
1572933962241:(reverse (offsets 0x78 0x7a))
1572934057201:(map #(str "0x" %) (reverse (offsets 0x78 0x7a)))
1572934088876:(apply str (map #(str "0x" %) (reverse (offsets 0x78 0x7a))))
1572934105021:(map #(str "0x" %) (reverse (offsets 0x78 0x7a)))
1572934216525:(offsets 0x78 0x7a)
1572934275681:(str "0x" (first (offsets 0x78 0x7a)))
1572934288291:(str "0x" (last (offsets 0x78 0x7a)))
1572934506111:(str "0x" (offsets 0x78))
1572934521826:(offsets 0x78)
1572934621899:(str "0x" (first (offsets 0x78)))
1572934711516:(str "0x" (first (offsets 0x79)))
1572934943581:(word 0x78)
1572935081075:(js/parseInt *1)
1572936263838:(require 'mecca.view)
1572936270178:(in-ns 'mecca.view)
1572985750565:(require 'mecca.view)
1572985754173:(in-ns 'mecca.view)
1572985823900:@(subscribe [:file-upload])
1572985838721:(def myfile @(subscribe [:file-upload]))
1572985847745:(count myfile)
1572987033430:(+ 0x80 1000)
1572987114083:(.toString 1000 16)
1572987280675:(count myfile)
1572987288792:(def myfile @(subscribe [:file-upload]))
1572987291758:(count myfile)
1572987374915:(offset myfile 0)
1572989873567:(require 'mecca.view)
1572989888961:(in-ns 'mecca.view)
1572989897152:(def myfile @(subscribe [:file-upload]))
1572989901480:myfile
1572989909853:(offset myfile 0)
1572990125378:(require 'mecca.view)
1572990130686:(in-ns 'mecca.view)
1572990137379:(def myfile @(subscribe [:file-upload]))
1572990156050:(offset myfile 0)
1572990214961:(offset myfile 0x80)
1572990230180:(offset myfile (inc 0x80))
1572990548185:(offset myfile (inc 0x3e8))
1572990558747:(offset myfile (inc 0x3e7))
1572990581743:(offset myfile (inc 0x3ff))
1572990603315:(offset myfile 0x80)
1572990609535:(offset myfile 0x81)
1572990618487:(offset myfile 0xfff)
1572990643982:(+ 1000 0x80)
1572990664705:(.toString 1128 16)
1572990693269:(offset myfile 0x468)
1572990702980:(offset myfile 0x469)
1572990727423:(offset myfile 0x46a)
1572990757117:(offset myfile (inc 0x469))
1572990763336:(offset myfile 0x46b)
1572991263413:(+ 10000 0x80)
1572991278366:(.toString 10128 16)
1572991491852:(def myfile @(subscribe [:file-upload]))
1572991501580:(count myfile)
1572991639622:(quot 1.5 1)
1573000463820:(require 'mecca.view)
1573000475898:(in-ns 'mecca.view)
1573000508390:(def myfile @(subscribe [:file-upload]))
1573000515127:(count myfile)
1573000552477:(bankswitch-vals myfile)
1573001263369:(- 0x8fff 0x8000)
1573001286278:(+ 0x80 4095)
1573001308540:(.toString 4223 16)
1573002477402:(require 'mecca.view)
1573002481803:(in-ns 'mecca.view)
1573002496638:(def myfile @(subscribe [:file-upload]))
1573002503649:(count myfile)
1573002533187:(hex-bytes myfile 0x80 0x107f)
1573002558720:(count (hex-bytes myfile 0x80 0x107f))
1573002642231:(+ 4095 0x107f)
1573002691919:(count (hex-bytes myfile 0x107f 0x8318))
1573002715978:(count (hex-bytes myfile 0x80 0x107f))
1573002721669:(def myfile @(subscribe [:file-upload]))
1573002724761:(count (hex-bytes myfile 0x80 0x107f))
1573003504726:(+ 4095 0x8318)
1573003553406:(.toString 37655 16)
1573004042968:(+ 4095 0x9317)
1573004052874:(.toString 41750 16)
1573004088037:(+ 4095 0xa316)
1573004096999:(.toString 45845 16)
1573004130492:(+ 4095 0xb315)
1573004140522:(.toString 49940 16)
1573004181896:(+ 4095 0xc314)
1573004189933:(.toString 54035 16)
1573004210870:(+ 4095 0xd313)
1573004219095:(.toString 58130 16)
1573004344125:(def register-banks\n    [[0x80 0x107f] [0x107f 0x8318] [0x8318 0x9317] [0x9317 0xa316]\n        [0xa316 0xb315] [0xb315 0xc314] [0xc314 0xd313] [0xd313 0xe312]])
1573004357427:(get register-banks 1)
1573004368874:(get register-banks 0)
1573004678751:(- 0x107f 0x80)
1573004697276:(- 0x8318 0x107f)
1573004719038:(+ 4095 0x107f)
1573004734067:(.toString 8318 16)
1573004816566:(+ 4095 0x207e)
1573004825837:(.toString 12413 16)
