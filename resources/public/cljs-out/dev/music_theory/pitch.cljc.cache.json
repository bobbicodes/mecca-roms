["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$music-theory.pitch","~:imports",null,"~:requires",["^ ","~$note","~$music-theory.note","^<","^<","~$tunings","~$music-theory.pitch.tunings","^>","^>"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$note->hz",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/porky/mecca-roms/resources/public/cljs-out/dev/music_theory/pitch.cljc","~:line",112,"~:column",7,"~:end-line",112,"~:end-column",15,"~:arglists",["~#list",["~$quote",["^K",[["^;"]]]]],"~:doc","Converts a note in the form of a string or keyword (e.g. C#4, :Db5, A2) into\n   its frequency in hz.\n\n   Reference pitch is A440 by default. To calculate pitch based on an alternate\n   reference pitch (e.g. A430), bind *reference-pitch* to the frequency of A4."],"^7","~$music-theory.pitch/note->hz","~:variadic",false,"^E","resources/public/cljs-out/dev/music_theory/pitch.cljc","^I",15,"~:method-params",["^K",[["^;"]]],"~:protocol-impl",null,"~:arglists-meta",["^K",[null,null]],"^G",1,"^F",112,"^H",112,"~:max-fixed-arity",1,"~:fn-var",true,"^J",["^K",["^L",["^K",[["^;"]]]]],"^M","Converts a note in the form of a string or keyword (e.g. C#4, :Db5, A2) into\n   its frequency in hz.\n\n   Reference pitch is A440 by default. To calculate pitch based on an alternate\n   reference pitch (e.g. A430), bind *reference-pitch* to the frequency of A4."],"~$set-reference-pitch!",["^ ","^C",null,"^D",["^ ","^E","/home/porky/mecca-roms/resources/public/cljs-out/dev/music_theory/pitch.cljc","^F",11,"^G",7,"^H",11,"^I",27,"^J",["^K",["^L",["^K",[["~$freq"]]]]],"^M","Changes the reference pitch, which is the frequency of A4. (default: 440)"],"^7","~$music-theory.pitch/set-reference-pitch!","^O",false,"^E","resources/public/cljs-out/dev/music_theory/pitch.cljc","^I",27,"^P",["^K",[["^V"]]],"^Q",null,"^R",["^K",[null,null]],"^G",1,"^F",11,"^H",11,"^S",1,"^T",true,"^J",["^K",["^L",["^K",[["^V"]]]]],"^M","Changes the reference pitch, which is the frequency of A4. (default: 440)"],"~$set-tuning-system!",["^ ","^C",null,"^D",["^ ","^E","/home/porky/mecca-roms/resources/public/cljs-out/dev/music_theory/pitch.cljc","^F",43,"^G",7,"^H",43,"^I",25,"^J",["^K",["^L",["^K",[["~$system"]]]]],"^M","Changes the tuning system. (default: :equal)"],"^7","~$music-theory.pitch/set-tuning-system!","^O",false,"^E","resources/public/cljs-out/dev/music_theory/pitch.cljc","^I",25,"^P",["^K",[["^Y"]]],"^Q",null,"^R",["^K",[null,null]],"^G",1,"^F",43,"^H",43,"^S",1,"^T",true,"^J",["^K",["^L",["^K",[["^Y"]]]]],"^M","Changes the tuning system. (default: :equal)"],"~$*tuning-system*",["^ ","^7","~$music-theory.pitch/*tuning-system*","^E","resources/public/cljs-out/dev/music_theory/pitch.cljc","^F",7,"^G",1,"^H",7,"^I",31,"~:dynamic",true,"^D",["^ ","^E","/home/porky/mecca-roms/resources/public/cljs-out/dev/music_theory/pitch.cljc","^F",7,"^G",16,"^H",7,"^I",31,"^11",true],"~:tag","~$cljs.core/Keyword"],"~$hz->midi",["^ ","^C",null,"^D",["^ ","^E","/home/porky/mecca-roms/resources/public/cljs-out/dev/music_theory/pitch.cljc","^F",122,"^G",7,"^H",122,"^I",15,"^J",["^K",["^L",["^K",[["^V"]]]]],"^M","Converts a frequency in Hz to the closest MIDI note.\n\n   Reference pitch is A440 by default. To calculate pitch based on an alternate\n   reference pitch (e.g. A430), set or bind *reference-pitch* to the frequency\n   of A4.\n\n   Tuning system is equal temperament by default. To calculate pitch based on\n   an alternate tuning system (e.g. well temperament), set or bind\n   *tuning-system* to a valid keyword representing that tuning system."],"^7","~$music-theory.pitch/hz->midi","^O",false,"^E","resources/public/cljs-out/dev/music_theory/pitch.cljc","^I",15,"^P",["^K",[["^V"]]],"^Q",null,"^R",["^K",[null,null]],"^G",1,"^F",122,"^H",122,"^S",1,"^T",true,"^J",["^K",["^L",["^K",[["^V"]]]]],"^M","Converts a frequency in Hz to the closest MIDI note.\n\n   Reference pitch is A440 by default. To calculate pitch based on an alternate\n   reference pitch (e.g. A430), set or bind *reference-pitch* to the frequency\n   of A4.\n\n   Tuning system is equal temperament by default. To calculate pitch based on\n   an alternate tuning system (e.g. well temperament), set or bind\n   *tuning-system* to a valid keyword representing that tuning system."],"~$*tonic*",["^ ","^7","~$music-theory.pitch/*tonic*","^E","resources/public/cljs-out/dev/music_theory/pitch.cljc","^F",8,"^G",1,"^H",8,"^I",23,"^11",true,"^D",["^ ","^E","/home/porky/mecca-roms/resources/public/cljs-out/dev/music_theory/pitch.cljc","^F",8,"^G",16,"^H",8,"^I",23,"^11",true],"^12","~$clj-nil"],"~$*reference-pitch*",["^ ","^7","~$music-theory.pitch/*reference-pitch*","^E","resources/public/cljs-out/dev/music_theory/pitch.cljc","^F",6,"^G",1,"^H",6,"^I",33,"^11",true,"^D",["^ ","^E","/home/porky/mecca-roms/resources/public/cljs-out/dev/music_theory/pitch.cljc","^F",6,"^G",16,"^H",6,"^I",33,"^11",true],"^12","~$number"],"~$*scale-type*",["^ ","^7","~$music-theory.pitch/*scale-type*","^E","resources/public/cljs-out/dev/music_theory/pitch.cljc","^F",9,"^G",1,"^H",9,"^I",28,"^11",true,"^D",["^ ","^E","/home/porky/mecca-roms/resources/public/cljs-out/dev/music_theory/pitch.cljc","^F",9,"^G",16,"^H",9,"^I",28,"^11",true],"^12","^13"],"~$midi->hz",["^ ","^C",null,"^D",["^ ","^E","/home/porky/mecca-roms/resources/public/cljs-out/dev/music_theory/pitch.cljc","^F",80,"^G",7,"^H",80,"^I",15,"^J",["^K",["^L",["^K",[["~$midi-note"]]]]],"^M","Converts a MIDI note (0-127) to its frequency in Hz.\n\n   Reference pitch is A440 by default. To calculate pitch based on an alternate\n   reference pitch (e.g. A430), set or bind *reference-pitch* to the frequency\n   of A4.\n\n   Tuning system is equal temperament by default. To calculate pitch based on\n   an alternate tuning system (e.g. well temperament), set or bind\n   *tuning-system* to a valid keyword representing that tuning system."],"^7","~$music-theory.pitch/midi->hz","^O",false,"^E","resources/public/cljs-out/dev/music_theory/pitch.cljc","^I",15,"^P",["^K",[["^1?"]]],"^Q",null,"^R",["^K",[null,null]],"^G",1,"^F",80,"^H",80,"^S",1,"^T",true,"^J",["^K",["^L",["^K",[["^1?"]]]]],"^M","Converts a MIDI note (0-127) to its frequency in Hz.\n\n   Reference pitch is A440 by default. To calculate pitch based on an alternate\n   reference pitch (e.g. A430), set or bind *reference-pitch* to the frequency\n   of A4.\n\n   Tuning system is equal temperament by default. To calculate pitch based on\n   an alternate tuning system (e.g. well temperament), set or bind\n   *tuning-system* to a valid keyword representing that tuning system."],"~$set-key!",["^ ","^C",null,"^D",["^ ","^E","/home/porky/mecca-roms/resources/public/cljs-out/dev/music_theory/pitch.cljc","^F",24,"^G",7,"^H",24,"^I",15,"^J",["^K",["^L",["^K",[["~$tonic"],["^1B","~$scale-type"]]]]],"^M","Sets the key, which is required by some tuning systems in order to calculate\n   the frequency of a note in Hz.","~:top-fn",["^ ","^O",false,"^S",2,"^P",["^K",[["^1B"],["^1B","^1C"]]],"^J",["^K",[["^1B"],["^1B","^1C"]]],"^R",["^K",[null,null]]]],"^7","~$music-theory.pitch/set-key!","^O",false,"^E","resources/public/cljs-out/dev/music_theory/pitch.cljc","^I",15,"^1D",["^ ","^O",false,"^S",2,"^P",["^K",[["^1B"],["^1B","^1C"]]],"^J",["^K",[["^1B"],["^1B","^1C"]]],"^R",["^K",[null,null]]],"^P",["^K",[["^1B"],["^1B","^1C"]]],"^Q",null,"^R",["^K",[null,null]],"^G",1,"^F",24,"^H",24,"^S",2,"^T",true,"^J",["^K",[["^1B"],["^1B","^1C"]]],"^M","Sets the key, which is required by some tuning systems in order to calculate\n   the frequency of a note in Hz."]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^8","^8"],"~:cljs.analyzer/constants",["^ ","~:seen",["^6",["~:number","~:major","~:equal"]],"~:order",["^1L","^1K","^1J"]],"^M",null]