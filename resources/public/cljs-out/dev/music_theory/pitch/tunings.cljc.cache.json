["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$music-theory.pitch.tunings","~:imports",null,"~:requires",["^ ","~$note","~$music-theory.note","^<","^<"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$<-well",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/porky/mecca-roms/resources/public/cljs-out/dev/music_theory/pitch/tunings.cljc","~:line",36,"~:column",7,"~:end-line",36,"~:end-column",13,"~:arglists",["~#list",["~$quote",["^I",[["~$ratios"]]]]],"~:doc","A higher-order function that creates a reverse tuning function for a\n   well-tempered tuning system, given a list of 12 ratios."],"^7","~$music-theory.pitch.tunings/<-well","~:variadic",false,"^C","resources/public/cljs-out/dev/music_theory/pitch/tunings.cljc","^G",13,"~:method-params",["^I",[["^K"]]],"~:protocol-impl",null,"~:arglists-meta",["^I",[null,null]],"^E",1,"^D",36,"^F",36,"~:max-fixed-arity",1,"~:fn-var",true,"^H",["^I",["^J",["^I",[["^K"]]]]],"^L","A higher-order function that creates a reverse tuning function for a\n   well-tempered tuning system, given a list of 12 ratios."],"~$well->",["^ ","^A",null,"^B",["^ ","^C","/home/porky/mecca-roms/resources/public/cljs-out/dev/music_theory/pitch/tunings.cljc","^D",20,"^E",7,"^F",20,"^G",13,"^H",["^I",["^J",["^I",[["^K"]]]]],"^L","A higher-order function that creates a tuning function for a well-tempered\n   tuning system, given a list of 12 ratios."],"^7","~$music-theory.pitch.tunings/well->","^N",false,"^C","resources/public/cljs-out/dev/music_theory/pitch/tunings.cljc","^G",13,"^O",["^I",[["^K"]]],"^P",null,"^Q",["^I",[null,null]],"^E",1,"^D",20,"^F",20,"^R",1,"^S",true,"^H",["^I",["^J",["^I",[["^K"]]]]],"^L","A higher-order function that creates a tuning function for a well-tempered\n   tuning system, given a list of 12 ratios."],"~$young->",["^ ","^A",null,"^B",["^ ","^C","/home/porky/mecca-roms/resources/public/cljs-out/dev/music_theory/pitch/tunings.cljc","^D",130,"^E",7,"^F",130,"^G",14,"^H",["^I",["^J",["^I",[["~$ref-pitch","~$midi-note","~$tonic"]]]]],"^L","The piano tuning used by La Monte Young in his composition The Well-Tuned\n   Piano. It is a form of just intonation based on a modified seven-limit\n   tuning process.\n   (source: https://en.wikipedia.org/wiki/The_Well-Tuned_Piano#Tuning)\n\n   Interestingly, this scale does not uniformly ascend. A couple notes are\n   actually lower in pitch than the next note up. This is so that all perfect\n   fifths (3/2 ratios) will be spelled as perfect fifths on the keyboard.\n   (source: http://www.kylegann.com/wtp.html)"],"^7","~$music-theory.pitch.tunings/young->","^N",false,"^C","resources/public/cljs-out/dev/music_theory/pitch/tunings.cljc","^G",14,"^O",["^I",[["^W","^X","^Y"]]],"^P",null,"^Q",["^I",[null,null]],"^E",1,"^D",130,"^F",130,"^R",3,"^S",true,"^H",["^I",["^J",["^I",[["^W","^X","^Y"]]]]],"^L","The piano tuning used by La Monte Young in his composition The Well-Tuned\n   Piano. It is a form of just intonation based on a modified seven-limit\n   tuning process.\n   (source: https://en.wikipedia.org/wiki/The_Well-Tuned_Piano#Tuning)\n\n   Interestingly, this scale does not uniformly ascend. A couple notes are\n   actually lower in pitch than the next note up. This is so that all perfect\n   fifths (3/2 ratios) will be spelled as perfect fifths on the keyboard.\n   (source: http://www.kylegann.com/wtp.html)"],"~$<-just",["^ ","^A",null,"^B",["^ ","^C","/home/porky/mecca-roms/resources/public/cljs-out/dev/music_theory/pitch/tunings.cljc","^D",110,"^E",7,"^F",110,"^G",13,"^H",["^I",["^J",["^I",[["^W","~$frequency","^Y"]]]]]],"^7","~$music-theory.pitch.tunings/<-just","^N",false,"^C","resources/public/cljs-out/dev/music_theory/pitch/tunings.cljc","^G",13,"^O",["^I",[["^W","^10","^Y"]]],"^P",null,"^Q",["^I",[null,null]],"^E",1,"^D",110,"^F",110,"^R",3,"^S",true,"^H",["^I",["^J",["^I",[["^W","^10","^Y"]]]]]],"~$equal->",["^ ","^A",null,"^B",["^ ","^C","/home/porky/mecca-roms/resources/public/cljs-out/dev/music_theory/pitch/tunings.cljc","^D",10,"^E",7,"^F",10,"^G",14,"^H",["^I",["^J",["^I",[["^W","^X"]]]]],"^L","Equal temperament: so convenient, yet so ugly."],"^7","~$music-theory.pitch.tunings/equal->","^N",false,"^C","resources/public/cljs-out/dev/music_theory/pitch/tunings.cljc","^G",14,"^O",["^I",[["^W","^X"]]],"^P",null,"^Q",["^I",[null,null]],"^E",1,"^D",10,"^F",10,"^R",2,"^S",true,"^H",["^I",["^J",["^I",[["^W","^X"]]]]],"^L","Equal temperament: so convenient, yet so ugly."],"~$<-equal",["^ ","^A",null,"^B",["^ ","^C","/home/porky/mecca-roms/resources/public/cljs-out/dev/music_theory/pitch/tunings.cljc","^D",15,"^E",7,"^F",15,"^G",14,"^H",["^I",["^J",["^I",[["^W","~$freq"]]]]]],"^7","~$music-theory.pitch.tunings/<-equal","^N",false,"^C","resources/public/cljs-out/dev/music_theory/pitch/tunings.cljc","^G",14,"^O",["^I",[["^W","^15"]]],"^P",null,"^Q",["^I",[null,null]],"^E",1,"^D",15,"^F",15,"^R",2,"^S",true,"^H",["^I",["^J",["^I",[["^W","^15"]]]]]],"~$<-young",["^ ","^A",null,"^B",["^ ","^C","/home/porky/mecca-roms/resources/public/cljs-out/dev/music_theory/pitch/tunings.cljc","^D",144,"^E",7,"^F",144,"^G",14,"^H",["^I",["^J",["^I",[["^W","^10","^Y"]]]]]],"^7","~$music-theory.pitch.tunings/<-young","^N",false,"^C","resources/public/cljs-out/dev/music_theory/pitch/tunings.cljc","^G",14,"^O",["^I",[["^W","^10","^Y"]]],"^P",null,"^Q",["^I",[null,null]],"^E",1,"^D",144,"^F",144,"^R",3,"^S",true,"^H",["^I",["^J",["^I",[["^W","^10","^Y"]]]]]],"~$just->",["^ ","^A",null,"^B",["^ ","^C","/home/porky/mecca-roms/resources/public/cljs-out/dev/music_theory/pitch/tunings.cljc","^D",98,"^E",7,"^F",98,"^G",13,"^H",["^I",["^J",["^I",[["^W","^X","^Y"]]]]],"^L","Just intonation is any musical tuning in which the frequencies of the notes\n   are related by ratios of small whole numbers.\n   (source: https://en.wikipedia.org/wiki/Just_intonation)\n\n   There are a lot of variations on these ratios. These ones were picked\n   somewhat arbitrarily as a good general example of just intonation.\n   (ref: http://www.sfu.ca/sonic-studio/handbook/Just_Tuning.html)"],"^7","~$music-theory.pitch.tunings/just->","^N",false,"^C","resources/public/cljs-out/dev/music_theory/pitch/tunings.cljc","^G",13,"^O",["^I",[["^W","^X","^Y"]]],"^P",null,"^Q",["^I",[null,null]],"^E",1,"^D",98,"^F",98,"^R",3,"^S",true,"^H",["^I",["^J",["^I",[["^W","^X","^Y"]]]]],"^L","Just intonation is any musical tuning in which the frequencies of the notes\n   are related by ratios of small whole numbers.\n   (source: https://en.wikipedia.org/wiki/Just_intonation)\n\n   There are a lot of variations on these ratios. These ones were picked\n   somewhat arbitrarily as a good general example of just intonation.\n   (ref: http://www.sfu.ca/sonic-studio/handbook/Just_Tuning.html)"],"~$just-ratios",["^ ","^7","~$music-theory.pitch.tunings/just-ratios","^C","resources/public/cljs-out/dev/music_theory/pitch/tunings.cljc","^D",84,"^E",1,"^F",84,"^G",17,"^B",["^ ","^C","/home/porky/mecca-roms/resources/public/cljs-out/dev/music_theory/pitch/tunings.cljc","^D",84,"^E",6,"^F",84,"^G",17],"~:tag","~$cljs.core/IVector"],"~$werckmeister-iii-ratios",["^ ","^7","~$music-theory.pitch.tunings/werckmeister-iii-ratios","^C","resources/public/cljs-out/dev/music_theory/pitch/tunings.cljc","^D",53,"^E",1,"^F",53,"^G",29,"^B",["^ ","^C","/home/porky/mecca-roms/resources/public/cljs-out/dev/music_theory/pitch/tunings.cljc","^D",53,"^E",6,"^F",53,"^G",29],"^1=","^1>"],"~$young-ratios",["^ ","^7","~$music-theory.pitch.tunings/young-ratios","^C","resources/public/cljs-out/dev/music_theory/pitch/tunings.cljc","^D",116,"^E",1,"^F",116,"^G",18,"^B",["^ ","^C","/home/porky/mecca-roms/resources/public/cljs-out/dev/music_theory/pitch/tunings.cljc","^D",116,"^E",6,"^F",116,"^G",18],"^1=","^1>"],"~$werckmeister-iii->",["^ ","^A",null,"^B",["^ ","^C","/home/porky/mecca-roms/resources/public/cljs-out/dev/music_theory/pitch/tunings.cljc","^D",67,"^E",7,"^F",67,"^G",25,"^H",["^I",["^J",["^I",[["^W","^X","^Y"]]]]],"^L","Werckmeister I (III): 'correct temperament' based on 1/4 comma divisions\n   (source: https://en.wikipedia.org/wiki/Werckmeister_temperament)\n\n   Uses equal temperament as the standard for finding the starting pitch, based\n   on the reference pitch and the tonic, then uses the Werckmeister III ratios\n   to tune based on the tonic."],"^7","~$music-theory.pitch.tunings/werckmeister-iii->","^N",false,"^C","resources/public/cljs-out/dev/music_theory/pitch/tunings.cljc","^G",25,"^O",["^I",[["^W","^X","^Y"]]],"^P",null,"^Q",["^I",[null,null]],"^E",1,"^D",67,"^F",67,"^R",3,"^S",true,"^H",["^I",["^J",["^I",[["^W","^X","^Y"]]]]],"^L","Werckmeister I (III): 'correct temperament' based on 1/4 comma divisions\n   (source: https://en.wikipedia.org/wiki/Werckmeister_temperament)\n\n   Uses equal temperament as the standard for finding the starting pitch, based\n   on the reference pitch and the tonic, then uses the Werckmeister III ratios\n   to tune based on the tonic."],"~$<-werckmeister-iii",["^ ","^A",null,"^B",["^ ","^C","/home/porky/mecca-roms/resources/public/cljs-out/dev/music_theory/pitch/tunings.cljc","^D",78,"^E",7,"^F",78,"^G",25,"^H",["^I",["^J",["^I",[["^W","^10","^Y"]]]]]],"^7","~$music-theory.pitch.tunings/<-werckmeister-iii","^N",false,"^C","resources/public/cljs-out/dev/music_theory/pitch/tunings.cljc","^G",25,"^O",["^I",[["^W","^10","^Y"]]],"^P",null,"^Q",["^I",[null,null]],"^E",1,"^D",78,"^F",78,"^R",3,"^S",true,"^H",["^I",["^J",["^I",[["^W","^10","^Y"]]]]]]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^6",["~:number"]],"~:order",["^1K"]],"^L",null]