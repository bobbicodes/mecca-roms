["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$window",["^ ","~$AudioContext",["^ "],"~$webkitAudioContext",["^ "]],"~$Math",["^ ","~$floor",["^ "]],"~$Error",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$chronoid.core","~:imports",null,"~:requires",null,"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$clock",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/porky/mecca-roms/resources/public/cljs-out/dev/chronoid/core.cljs","~:line",26,"~:column",7,"~:end-line",26,"~:end-column",12,"~:arglists",["~#list",["~$quote",["^L",[["~$&",["^ ","~:as","~$attrs"]]]]]],"~:top-fn",["^ ","~:variadic",true,"~:max-fixed-arity",0,"~:method-params",[["^L",[["^ ","^N","^O"]]]],"^K",["^L",[["~$&",["^ ","^N","^O"]]]],"~:arglists-meta",["^L",[null]]]],"^<","~$chronoid.core/clock","^Q",true,"^F","resources/public/cljs-out/dev/chronoid/core.cljs","^J",12,"^P",["^ ","^Q",true,"^R",0,"^S",[["^L",[["^ ","^N","^O"]]]],"^K",["^L",[["~$&",["^ ","^N","^O"]]]],"^T",["^L",[null]]],"^S",[["^L",[["^ ","^N","^O"]]]],"~:protocol-impl",null,"^T",["^L",[null]],"^H",1,"^G",26,"^I",26,"^R",0,"~:fn-var",true,"^K",["^L",[["~$&",["^ ","^N","^O"]]]]],"~$audio-context",["^ ","^<","~$chronoid.core/audio-context","^F","resources/public/cljs-out/dev/chronoid/core.cljs","^G",9,"^H",1,"^I",9,"^J",19,"^E",["^ ","^F","/home/porky/mecca-roms/resources/public/cljs-out/dev/chronoid/core.cljs","^G",9,"^H",6,"^I",9,"^J",19],"~:doc","An atomic reference to a global audio context that gets created the first\n   time you call `clock` and is reused for any subsequent clocks.","~:tag","~$any"],"~$execute!",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca-roms/resources/public/cljs-out/dev/chronoid/core.cljs","^G",129,"^H",8,"^I",129,"^J",16,"~:private",true,"^K",["^L",["^M",["^L",[[["^ ","~:keys",["~$action","~$clock-id","~$latest-time","~$repeat-time"],"^N","~$event"]]]]]]],"^12",true,"^<","~$chronoid.core/execute!","^Q",false,"^F","resources/public/cljs-out/dev/chronoid/core.cljs","^J",16,"^S",["^L",[["~$p__25516"]]],"^V",null,"^T",["^L",[null,null]],"^H",1,"^G",129,"^I",129,"^R",1,"^W",true,"^K",["^L",["^M",["^L",[[["^ ","^13",["^14","^15","^16","^17"],"^N","^18"]]]]]]],"~$start!",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca-roms/resources/public/cljs-out/dev/chronoid/core.cljs","^G",211,"^H",7,"^I",211,"^J",13,"^K",["^L",["^M",["^L",[["~$clock-atom"]]]]],"^Z","Remove all scheduled events and start the clock."],"^<","~$chronoid.core/start!","^Q",false,"^F","resources/public/cljs-out/dev/chronoid/core.cljs","^J",13,"^S",["^L",[["^1<"]]],"^V",null,"^T",["^L",[null,null]],"^H",1,"^G",211,"^I",211,"^R",1,"^W",true,"^K",["^L",["^M",["^L",[["^1<"]]]]],"^Z","Remove all scheduled events and start the clock."],"~$schedule!",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca-roms/resources/public/cljs-out/dev/chronoid/core.cljs","^G",120,"^H",8,"^I",120,"^J",17,"^12",true,"^K",["^L",["^M",["^L",[[["^ ","^13",["^15"],"^N","^18"],"~$new-deadline"]]]]],"^Z","Schedule a copy of an event with a new deadline."],"^12",true,"^<","~$chronoid.core/schedule!","^Q",false,"^F","resources/public/cljs-out/dev/chronoid/core.cljs","^J",17,"^S",["^L",[["~$p__25513","^1?"]]],"^V",null,"^T",["^L",[null,null]],"^H",1,"^G",120,"^I",120,"^R",2,"^W",true,"^K",["^L",["^M",["^L",[[["^ ","^13",["^15"],"^N","^18"],"^1?"]]]]],"^Z","Schedule a copy of an event with a new deadline."],"~$default-options",["^ ","^<","~$chronoid.core/default-options","^F","resources/public/cljs-out/dev/chronoid/core.cljs","^G",3,"^H",1,"^I",3,"^J",21,"^E",["^ ","^F","/home/porky/mecca-roms/resources/public/cljs-out/dev/chronoid/core.cljs","^G",3,"^H",6,"^I",3,"^J",21],"^[","~$cljs.core/IMap"],"~$*clocks*",["^ ","^<","~$chronoid.core/*clocks*","^F","resources/public/cljs-out/dev/chronoid/core.cljs","^G",7,"^H",1,"^I",7,"^J",24,"~:dynamic",true,"^E",["^ ","^F","/home/porky/mecca-roms/resources/public/cljs-out/dev/chronoid/core.cljs","^G",7,"^H",16,"^I",7,"^J",24,"^1G",true],"^[","^1D"],"~$current-time",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca-roms/resources/public/cljs-out/dev/chronoid/core.cljs","^G",40,"^H",7,"^I",40,"^J",19,"^K",["^L",["^M",["^L",[[["^ ","^13",["~$context"]]]]]]],"^Z","Returns the current time of a clock's audio context, in milliseconds."],"^<","~$chronoid.core/current-time","^Q",false,"^F","resources/public/cljs-out/dev/chronoid/core.cljs","^J",19,"^S",["^L",[["~$p__25457"]]],"^V",null,"^T",["^L",[null,null]],"^H",1,"^G",40,"^I",40,"^R",1,"^W",true,"^K",["^L",["^M",["^L",[[["^ ","^13",["^1I"]]]]]]],"^Z","Returns the current time of a clock's audio context, in milliseconds."],"~$time-stretch!",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca-roms/resources/public/cljs-out/dev/chronoid/core.cljs","^G",188,"^H",7,"^I",188,"^J",20,"^K",["^L",["^M",["^L",[["~$e","~$ratio"],["~$e","~$time-reference","^1M"]]]]],"^Z","Reschedules events according to a `time-reference` and a `ratio`.\n   If the event is a repeating event, adjusts its repeat-time accordingly.\n\n   The first argument can be either a single event or a list of events.\n   Returns the rescheduled event, or a list of rescheduled events, depending\n   on the input type.\n\n   e.g.\n   (time-stretch! e (current-time clock) 0.5)\n   ^-- makes an event `e` occur twice as soon as it would otherwise\n\n   If `time-reference` is omitted, the default value is the current time of the\n   event's clock.","^P",["^ ","^Q",false,"^R",3,"^S",["^L",[["~$e","^1M"],["~$e","^1N","^1M"]]],"^K",["^L",[["~$e","^1M"],["~$e","^1N","^1M"]]],"^T",["^L",[null,null]]]],"^<","~$chronoid.core/time-stretch!","^Q",false,"^F","resources/public/cljs-out/dev/chronoid/core.cljs","^J",20,"^P",["^ ","^Q",false,"^R",3,"^S",["^L",[["~$e","^1M"],["~$e","^1N","^1M"]]],"^K",["^L",[["~$e","^1M"],["~$e","^1N","^1M"]]],"^T",["^L",[null,null]]],"^S",["^L",[["~$e","^1M"],["~$e","^1N","^1M"]]],"^V",null,"^T",["^L",[null,null]],"^H",1,"^G",188,"^I",188,"^R",3,"^W",true,"^K",["^L",[["~$e","^1M"],["~$e","^1N","^1M"]]],"^Z","Reschedules events according to a `time-reference` and a `ratio`.\n   If the event is a repeating event, adjusts its repeat-time accordingly.\n\n   The first argument can be either a single event or a list of events.\n   Returns the rescheduled event, or a list of rescheduled events, depending\n   on the input type.\n\n   e.g.\n   (time-stretch! e (current-time clock) 0.5)\n   ^-- makes an event `e` occur twice as soon as it would otherwise\n\n   If `time-reference` is omitted, the default value is the current time of the\n   event's clock."],"~$schedule*",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca-roms/resources/public/cljs-out/dev/chronoid/core.cljs","^G",114,"^H",8,"^I",114,"^J",17,"^12",true,"^K",["^L",["^M",["^L",[["~$events","^18","^1?"]]]]],"^Z","Insert a copy of an event into an event queue with a new deadline."],"^12",true,"^<","~$chronoid.core/schedule*","^Q",false,"^F","resources/public/cljs-out/dev/chronoid/core.cljs","^J",17,"^S",["^L",[["^1Q","^18","^1?"]]],"^V",null,"^T",["^L",[null,null]],"^H",1,"^G",114,"^I",114,"^R",3,"^W",true,"^K",["^L",["^M",["^L",[["^1Q","^18","^1?"]]]]],"^Z","Insert a copy of an event into an event queue with a new deadline."],"~$repeat!",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca-roms/resources/public/cljs-out/dev/chronoid/core.cljs","^G",164,"^H",7,"^I",164,"^J",14,"^K",["^L",["^M",["^L",[[["^ ","^13",["~$deadline"],"^N","^18"],"~$time"]]]]],"^Z","Sets the event to repeat every `time` milliseconds "],"^<","~$chronoid.core/repeat!","^Q",false,"^F","resources/public/cljs-out/dev/chronoid/core.cljs","^J",14,"^S",["^L",[["~$p__25546","^1U"]]],"^V",null,"^T",["^L",[null,null]],"^H",1,"^G",164,"^I",164,"^R",2,"^W",true,"^K",["^L",["^M",["^L",[[["^ ","^13",["^1T"],"^N","^18"],"^1U"]]]]],"^Z","Sets the event to repeat every `time` milliseconds "],"~$event*",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca-roms/resources/public/cljs-out/dev/chronoid/core.cljs","^G",45,"^H",8,"^I",45,"^J",14,"^12",true,"^K",["^L",["^M",["^L",[[["^ ","^13",["~$id","^15","^C","^1T","~$tolerance-early","~$tolerance-late"],"^N","^18"]]]]]],"^Z","Constructor for an event. Requires `action`, `clock` (as an atom) and\n   `deadline` at the minimum.\n\n   Assigns a randomly generated id for the event if an :id is not provided to\n   the constructor. This is useful for removing and repeating events.\n\n   The tolerance interval (:latest-time and :earliest-time) is calculated\n   based on the deadline and :tolerance-early and :tolerance-late, which are\n   either provided as keyword arguments, or taken from the clock's options."],"^12",true,"^<","~$chronoid.core/event*","^Q",false,"^F","resources/public/cljs-out/dev/chronoid/core.cljs","^J",14,"^S",["^L",[["~$p__25460"]]],"^V",null,"^T",["^L",[null,null]],"^H",1,"^G",45,"^I",45,"^R",1,"^W",true,"^K",["^L",["^M",["^L",[[["^ ","^13",["^1Y","^15","^C","^1T","^1Z","^1["],"^N","^18"]]]]]],"^Z","Constructor for an event. Requires `action`, `clock` (as an atom) and\n   `deadline` at the minimum.\n\n   Assigns a randomly generated id for the event if an :id is not provided to\n   the constructor. This is useful for removing and repeating events.\n\n   The tolerance interval (:latest-time and :earliest-time) is calculated\n   based on the deadline and :tolerance-early and :tolerance-late, which are\n   either provided as keyword arguments, or taken from the clock's options."],"~$set-timeout!",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca-roms/resources/public/cljs-out/dev/chronoid/core.cljs","^G",139,"^H",7,"^I",139,"^J",19,"^K",["^L",["^M",["^L",[["^1<","~$f","~$delay-ms","~$&",["^ ","^N","~$opts"]]]]]],"^Z","Schedules `f` after `delay-ms` milliseconds. Returns the event.\n\n   `opts` may contain :tolerance-early and :tolerance-late for optionally\n   overriding the clock's timing window for events.","^P",["^ ","^Q",true,"^R",3,"^S",[["^L",["^1<","~$f","^23",["^ ","^N","^24"]]]],"^K",["^L",[["^1<","~$f","^23","~$&",["^ ","^N","^24"]]]],"^T",["^L",[null]]]],"^<","~$chronoid.core/set-timeout!","^Q",true,"^F","resources/public/cljs-out/dev/chronoid/core.cljs","^J",19,"^P",["^ ","^Q",true,"^R",3,"^S",[["^L",["^1<","~$f","^23",["^ ","^N","^24"]]]],"^K",["^L",[["^1<","~$f","^23","~$&",["^ ","^N","^24"]]]],"^T",["^L",[null]]],"^S",[["^L",["^1<","~$f","^23",["^ ","^N","^24"]]]],"^V",null,"^T",["^L",[null]],"^H",1,"^G",139,"^I",139,"^R",3,"^W",true,"^K",["^L",[["^1<","~$f","^23","~$&",["^ ","^N","^24"]]]],"^Z","Schedules `f` after `delay-ms` milliseconds. Returns the event.\n\n   `opts` may contain :tolerance-early and :tolerance-late for optionally\n   overriding the clock's timing window for events."],"~$create-event!",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca-roms/resources/public/cljs-out/dev/chronoid/core.cljs","^G",104,"^H",8,"^I",104,"^J",21,"^12",true,"^K",["^L",["^M",["^L",[["^1<","~$f","^1T","~$&",[["^ ","^N","^24"]]]]]]],"^Z","Create an event and insert into a clock's event queue.","^P",["^ ","^Q",true,"^R",3,"^S",[["^L",["^1<","~$f","^1T",[["^ ","^N","^24"]]]]],"^K",["^L",[["^1<","~$f","^1T","~$&",[["^ ","^N","^24"]]]]],"^T",["^L",[null]]]],"^12",true,"^<","~$chronoid.core/create-event!","^Q",true,"^F","resources/public/cljs-out/dev/chronoid/core.cljs","^J",21,"^P",["^ ","^Q",true,"^R",3,"^S",[["^L",["^1<","~$f","^1T",[["^ ","^N","^24"]]]]],"^K",["^L",[["^1<","~$f","^1T","~$&",[["^ ","^N","^24"]]]]],"^T",["^L",[null]]],"^S",[["^L",["^1<","~$f","^1T",[["^ ","^N","^24"]]]]],"^V",null,"^T",["^L",[null]],"^H",1,"^G",104,"^I",104,"^R",3,"^W",true,"^K",["^L",[["^1<","~$f","^1T","~$&",[["^ ","^N","^24"]]]]],"^Z","Create an event and insert into a clock's event queue."],"~$stop!",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca-roms/resources/public/cljs-out/dev/chronoid/core.cljs","^G",226,"^H",7,"^I",226,"^J",12,"^K",["^L",["^M",["^L",[["^1<"]]]]],"^Z","Stops the clock."],"^<","~$chronoid.core/stop!","^Q",false,"^F","resources/public/cljs-out/dev/chronoid/core.cljs","^J",12,"^S",["^L",[["^1<"]]],"^V",null,"^T",["^L",[null,null]],"^H",1,"^G",226,"^I",226,"^R",1,"^W",true,"^K",["^L",["^M",["^L",[["^1<"]]]]],"^Z","Stops the clock."],"~$clear!",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca-roms/resources/public/cljs-out/dev/chronoid/core.cljs","^G",155,"^H",7,"^I",155,"^J",13,"^K",["^L",["^M",["^L",[[["^ ","^13",["^15"],"^N","^18"]]]]]],"^Z","Unschedules an event by removing it from its clock's event queue."],"^<","~$chronoid.core/clear!","^Q",false,"^F","resources/public/cljs-out/dev/chronoid/core.cljs","^J",13,"^S",["^L",[["~$p__25540"]]],"^V",null,"^T",["^L",[null,null]],"^H",1,"^G",155,"^I",155,"^R",1,"^W",true,"^K",["^L",["^M",["^L",[[["^ ","^13",["^15"],"^N","^18"]]]]]],"^Z","Unschedules an event by removing it from its clock's event queue."],"~$tick!",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca-roms/resources/public/cljs-out/dev/chronoid/core.cljs","^G",71,"^H",8,"^I",71,"^J",13,"^12",true,"^K",["^L",["^M",["^L",[["^1<"]]]]],"^Z","This function is run constantly, and at each tick it executes events for\n   which `currentTime` is included in their tolerance interval."],"^12",true,"^<","~$chronoid.core/tick!","^Q",false,"^F","resources/public/cljs-out/dev/chronoid/core.cljs","^J",13,"^S",["^L",[["^1<"]]],"^V",null,"^T",["^L",[null,null]],"^H",1,"^G",71,"^I",71,"^R",1,"^W",true,"^K",["^L",["^M",["^L",[["^1<"]]]]],"^Z","This function is run constantly, and at each tick it executes events for\n   which `currentTime` is included in their tolerance interval."],"~$callback-at-time!",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca-roms/resources/public/cljs-out/dev/chronoid/core.cljs","^G",147,"^H",7,"^I",147,"^J",24,"^K",["^L",["^M",["^L",[["^1<","~$f","^1T","~$&",["^ ","^N","^24"]]]]]],"^Z","Schedules `f` to run before `deadline`. Returns the event.\n\n   `opts` may contain :tolerance-early and :tolerance-late for optionally\n   overriding the clock's timing window for events.","^P",["^ ","^Q",true,"^R",3,"^S",[["^L",["^1<","~$f","^1T",["^ ","^N","^24"]]]],"^K",["^L",[["^1<","~$f","^1T","~$&",["^ ","^N","^24"]]]],"^T",["^L",[null]]]],"^<","~$chronoid.core/callback-at-time!","^Q",true,"^F","resources/public/cljs-out/dev/chronoid/core.cljs","^J",24,"^P",["^ ","^Q",true,"^R",3,"^S",[["^L",["^1<","~$f","^1T",["^ ","^N","^24"]]]],"^K",["^L",[["^1<","~$f","^1T","~$&",["^ ","^N","^24"]]]],"^T",["^L",[null]]],"^S",[["^L",["^1<","~$f","^1T",["^ ","^N","^24"]]]],"^V",null,"^T",["^L",[null]],"^H",1,"^G",147,"^I",147,"^R",3,"^W",true,"^K",["^L",[["^1<","~$f","^1T","~$&",["^ ","^N","^24"]]]],"^Z","Schedules `f` to run before `deadline`. Returns the event.\n\n   `opts` may contain :tolerance-early and :tolerance-late for optionally\n   overriding the clock's timing window for events."],"~$index-by-time",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca-roms/resources/public/cljs-out/dev/chronoid/core.cljs","^G",83,"^H",8,"^I",83,"^J",21,"^12",true,"^K",["^L",["^M",["^L",[["^1Q","^1T"]]]]],"^Z","Does a binary search to find the index of the first event whose deadline is\n   >= `deadline`."],"^12",true,"^<","~$chronoid.core/index-by-time","^Q",false,"^F","resources/public/cljs-out/dev/chronoid/core.cljs","^J",21,"^S",["^L",[["^1Q","^1T"]]],"^V",null,"^T",["^L",[null,null]],"^H",1,"^G",83,"^I",83,"^R",2,"^W",true,"^K",["^L",["^M",["^L",[["^1Q","^1T"]]]]],"^Z","Does a binary search to find the index of the first event whose deadline is\n   >= `deadline`."],"~$new-audio-context",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca-roms/resources/public/cljs-out/dev/chronoid/core.cljs","^G",14,"^H",7,"^I",14,"^J",24,"^K",["^L",["^M",["^L",[[]]]]]],"^<","~$chronoid.core/new-audio-context","^Q",false,"^F","resources/public/cljs-out/dev/chronoid/core.cljs","^J",24,"^S",["^L",[[]]],"^V",null,"^T",["^L",[null,null]],"^H",1,"^G",14,"^I",14,"^R",0,"^W",true,"^K",["^L",["^M",["^L",[[]]]]]],"~$time-stretch!*",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca-roms/resources/public/cljs-out/dev/chronoid/core.cljs","^G",172,"^H",8,"^I",172,"^J",22,"^12",true,"^K",["^L",["^M",["^L",[[["^ ","^13",["^17","^15","^1T"],"^N","^18"],"^1N","^1M"]]]]],"^Z","Internal implementation for time-stretching a single event."],"^12",true,"^<","~$chronoid.core/time-stretch!*","^Q",false,"^F","resources/public/cljs-out/dev/chronoid/core.cljs","^J",22,"^S",["^L",[["~$p__25550","^1N","^1M"]]],"^V",null,"^T",["^L",[null,null]],"^H",1,"^G",172,"^I",172,"^R",3,"^W",true,"^K",["^L",["^M",["^L",[[["^ ","^13",["^17","^15","^1T"],"^N","^18"],"^1N","^1M"]]]]],"^Z","Internal implementation for time-stretching a single event."],"~$insert-event",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca-roms/resources/public/cljs-out/dev/chronoid/core.cljs","^G",98,"^H",8,"^I",98,"^J",20,"^12",true,"^K",["^L",["^M",["^L",[["^1Q",["^ ","^13",["~$earliest-time"],"^N","^18"]]]]]],"^Z","Insert an event into an event queue, properly sorted by deadline."],"^12",true,"^<","~$chronoid.core/insert-event","^Q",false,"^F","resources/public/cljs-out/dev/chronoid/core.cljs","^J",20,"^S",["^L",[["^1Q","~$p__25497"]]],"^V",null,"^T",["^L",[null,null]],"^H",1,"^G",98,"^I",98,"^R",2,"^W",true,"^K",["^L",["^M",["^L",[["^1Q",["^ ","^13",["^2I"],"^N","^18"]]]]]],"^Z","Insert an event into an event queue, properly sorted by deadline."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^;",["~:higher","~:started","~:tolerance-early","~:clock-node","~:events","~:repeat-time","~:tolerance-late","~:earliest-time","~:latest-time","~:id","~:lower","~:context","~:action","~:clock","^18","~:deadline","~:clock-id"]],"~:order",["^2V","^2R","^2[","^2Y","^2T","^2Q","^33","^31","^32","^18","^2X","^2W","^2P","^2Z","^30","^2U","^2S"]],"^Z",null]