["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$mantra.note","~:imports",null,"~:requires",["^ ","~$o","~$mantra.osc","^9","^9","~$nd","~$mantra.note.duration","^;","^;","~$np","~$mantra.note.pitch","^=","^=","~$c","~$chronoid.core","^>","^>"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$play-note*",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/porky/mecca-roms/resources/public/cljs-out/dev/mantra/note.cljs","~:line",7,"~:column",8,"~:end-line",7,"~:end-column",18,"~:private",true,"~:arglists",["~#list",["~$quote",["^L",[["~$osc-model",["^ ","~:keys",["~$pitch","~$duration","~$volume"],"~:as","~$note-model"]]]]]]],"^J",true,"^5","~$mantra.note/play-note*","~:variadic",false,"^E","resources/public/cljs-out/dev/mantra/note.cljs","^I",18,"~:method-params",["^L",[["^N","~$p__16453"]]],"~:protocol-impl",null,"~:arglists-meta",["^L",[null,null]],"^G",1,"^F",7,"^H",7,"~:max-fixed-arity",2,"~:fn-var",true,"^K",["^L",["^M",["^L",[["^N",["^ ","^O",["^P","^Q","^R"],"^S","^T"]]]]]]],"~$play-note",["^ ","^C",null,"^D",["^ ","^E","/home/porky/mecca-roms/resources/public/cljs-out/dev/mantra/note.cljs","^F",19,"^G",7,"^H",19,"^I",16,"^K",["^L",["^M",["^L",[["^N","^T"]]]]],"~:doc","Uses a one-off oscillator to play a note.\n\n   Stops any currently playing oscillators belonging to `osc-model`.\n\n   If duration is present, the oscillator is stopped after `duration` ms.\n\n   Otherwise, the note rings out indefinitely, until the oscillator is stopped."],"^5","~$mantra.note/play-note","^V",false,"^E","resources/public/cljs-out/dev/mantra/note.cljs","^I",16,"^W",["^L",[["^N","^T"]]],"^Y",null,"^Z",["^L",[null,null]],"^G",1,"^F",19,"^H",19,"^[",2,"^10",true,"^K",["^L",["^M",["^L",[["^N","^T"]]]]],"^12","Uses a one-off oscillator to play a note.\n\n   Stops any currently playing oscillators belonging to `osc-model`.\n\n   If duration is present, the oscillator is stopped after `duration` ms.\n\n   Otherwise, the note rings out indefinitely, until the oscillator is stopped."],"~$also-play-note",["^ ","^C",null,"^D",["^ ","^E","/home/porky/mecca-roms/resources/public/cljs-out/dev/mantra/note.cljs","^F",31,"^G",7,"^H",31,"^I",21,"^K",["^L",["^M",["^L",[["^N","^T"]]]]],"^12","Like `play-note`, but does not stop any currently playing oscillators."],"^5","~$mantra.note/also-play-note","^V",false,"^E","resources/public/cljs-out/dev/mantra/note.cljs","^I",21,"^W",["^L",[["^N","^T"]]],"^Y",null,"^Z",["^L",[null,null]],"^G",1,"^F",31,"^H",31,"^[",2,"^10",true,"^K",["^L",["^M",["^L",[["^N","^T"]]]]],"^12","Like `play-note`, but does not stop any currently playing oscillators."],"~$play-notes*",["^ ","^C",null,"^D",["^ ","^E","/home/porky/mecca-roms/resources/public/cljs-out/dev/mantra/note.cljs","^F",36,"^G",8,"^H",36,"^I",19,"^J",true,"^K",["^L",["^M",["^L",[[["^ ","^O",["~$clock"],"^S","^N"],"~$notes","~$play-fn"]]]]]],"^J",true,"^5","~$mantra.note/play-notes*","^V",false,"^E","resources/public/cljs-out/dev/mantra/note.cljs","^I",19,"^W",["^L",[["~$p__16458","^18","^19"]]],"^Y",null,"^Z",["^L",[null,null]],"^G",1,"^F",36,"^H",36,"^[",3,"^10",true,"^K",["^L",["^M",["^L",[[["^ ","^O",["^17"],"^S","^N"],"^18","^19"]]]]]],"~$play-notes",["^ ","^C",null,"^D",["^ ","^E","/home/porky/mecca-roms/resources/public/cljs-out/dev/mantra/note.cljs","^F",46,"^G",7,"^H",46,"^I",17,"^K",["^L",["^M",["^L",[["^N","^18"]]]]],"^12","Plays a sequence of notes, one after the other.\n\n   Stops any currently playing oscillators belonging to `osc-model`.\n\n   If pitch is omitted (or nil), the note is treated as a rest (a pause in the\n   sequence, the length of `duration`."],"^5","~$mantra.note/play-notes","^V",false,"^E","resources/public/cljs-out/dev/mantra/note.cljs","^I",17,"^W",["^L",[["^N","^18"]]],"^Y",null,"^Z",["^L",[null,null]],"^G",1,"^F",46,"^H",46,"^[",2,"^10",true,"^K",["^L",["^M",["^L",[["^N","^18"]]]]],"^12","Plays a sequence of notes, one after the other.\n\n   Stops any currently playing oscillators belonging to `osc-model`.\n\n   If pitch is omitted (or nil), the note is treated as a rest (a pause in the\n   sequence, the length of `duration`."],"~$also-play-notes",["^ ","^C",null,"^D",["^ ","^E","/home/porky/mecca-roms/resources/public/cljs-out/dev/mantra/note.cljs","^F",59,"^G",7,"^H",59,"^I",22,"^K",["^L",["^M",["^L",[["^N","^18"]]]]],"^12","Like `play-notes`, but does not stop any currently playing oscillators.\n\n   Each note in `notes` does behave normally when played, i.e. if it has a\n   duration, it *will* stop after `duration` ms."],"^5","~$mantra.note/also-play-notes","^V",false,"^E","resources/public/cljs-out/dev/mantra/note.cljs","^I",22,"^W",["^L",[["^N","^18"]]],"^Y",null,"^Z",["^L",[null,null]],"^G",1,"^F",59,"^H",59,"^[",2,"^10",true,"^K",["^L",["^M",["^L",[["^N","^18"]]]]],"^12","Like `play-notes`, but does not stop any currently playing oscillators.\n\n   Each note in `notes` does behave normally when played, i.e. if it has a\n   duration, it *will* stop after `duration` ms."],"~$play-chord*",["^ ","^C",null,"^D",["^ ","^E","/home/porky/mecca-roms/resources/public/cljs-out/dev/mantra/note.cljs","^F",67,"^G",8,"^H",67,"^I",19,"^J",true,"^K",["^L",["^M",["^L",[["^N","^18","^19"]]]]]],"^J",true,"^5","~$mantra.note/play-chord*","^V",false,"^E","resources/public/cljs-out/dev/mantra/note.cljs","^I",19,"^W",["^L",[["^N","^18","^19"]]],"^Y",null,"^Z",["^L",[null,null]],"^G",1,"^F",67,"^H",67,"^[",3,"^10",true,"^K",["^L",["^M",["^L",[["^N","^18","^19"]]]]]],"~$play-chord",["^ ","^C",null,"^D",["^ ","^E","/home/porky/mecca-roms/resources/public/cljs-out/dev/mantra/note.cljs","^F",73,"^G",7,"^H",73,"^I",17,"^K",["^L",["^M",["^L",[["^N","^18"]]]]],"^12","Plays a collection of notes simultaneously.\n\n   Stops any currently playing oscillators belonging to `osc-model`."],"^5","~$mantra.note/play-chord","^V",false,"^E","resources/public/cljs-out/dev/mantra/note.cljs","^I",17,"^W",["^L",[["^N","^18"]]],"^Y",null,"^Z",["^L",[null,null]],"^G",1,"^F",73,"^H",73,"^[",2,"^10",true,"^K",["^L",["^M",["^L",[["^N","^18"]]]]],"^12","Plays a collection of notes simultaneously.\n\n   Stops any currently playing oscillators belonging to `osc-model`."],"~$also-play-chord",["^ ","^C",null,"^D",["^ ","^E","/home/porky/mecca-roms/resources/public/cljs-out/dev/mantra/note.cljs","^F",81,"^G",7,"^H",81,"^I",22,"^K",["^L",["^M",["^L",[["^N","^18"]]]]],"^12","Like `play-chord`, but does not stop any currently playing oscillators.\n\n   Each note in `notes` does behave normally when played, i.e. if it has a\n   duration, it *will* stop after `duration` ms."],"^5","~$mantra.note/also-play-chord","^V",false,"^E","resources/public/cljs-out/dev/mantra/note.cljs","^I",22,"^W",["^L",[["^N","^18"]]],"^Y",null,"^Z",["^L",[null,null]],"^G",1,"^F",81,"^H",81,"^[",2,"^10",true,"^K",["^L",["^M",["^L",[["^N","^18"]]]]],"^12","Like `play-chord`, but does not stop any currently playing oscillators.\n\n   Each note in `notes` does behave normally when played, i.e. if it has a\n   duration, it *will* stop after `duration` ms."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:freq","~:gain-node","~:pitch","~:duration","~:volume","~:osc-node","~:gain","~:clock"]],"~:order",["^1L","^1M","^1N","^1O","^1K","^1Q","^1J","^1P"]],"^12",null]