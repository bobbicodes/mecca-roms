["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$window",["^ ","~$AudioContext",["^ "],"~$webkitAudioContext",["^ "]],"~$Math",["^ ","~$floor",["^ "]],"~$Error",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$mecca.music.time","~:imports",null,"~:requires",null,"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$clock",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/porky/mecca/src/mecca/music/time.cljs","~:line",21,"~:column",7,"~:end-line",21,"~:end-column",12,"~:arglists",["~#list",["~$quote",["^L",[["~$&",["^ ","~:as","~$attrs"]]]]]],"~:top-fn",["^ ","~:variadic",true,"~:max-fixed-arity",0,"~:method-params",[["^L",[["^ ","^N","^O"]]]],"^K",["^L",[["~$&",["^ ","^N","^O"]]]],"~:arglists-meta",["^L",[null]]]],"^<","~$mecca.music.time/clock","^Q",true,"^F","src/mecca/music/time.cljs","^J",12,"^P",["^ ","^Q",true,"^R",0,"^S",[["^L",[["^ ","^N","^O"]]]],"^K",["^L",[["~$&",["^ ","^N","^O"]]]],"^T",["^L",[null]]],"^S",[["^L",[["^ ","^N","^O"]]]],"~:protocol-impl",null,"^T",["^L",[null]],"^H",1,"^G",21,"^I",21,"^R",0,"~:fn-var",true,"^K",["^L",[["~$&",["^ ","^N","^O"]]]]],"~$current-time*",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca/src/mecca/music/time.cljs","^G",33,"^H",8,"^I",33,"^J",21,"~:private",true,"^K",["^L",["^M",["^L",[[["^ ","~:keys",["~$context"],"^N","^C"]]]]]],"~:doc","Internal implementation for the public function current-time, which works\n   on atom-wrapped clocks.\n   This internal version works on non-atom-wrapped clocks."],"^Y",true,"^<","~$mecca.music.time/current-time*","^Q",false,"^F","src/mecca/music/time.cljs","^J",21,"^S",["^L",[["~$p__16802"]]],"^V",null,"^T",["^L",[null,null]],"^H",1,"^G",33,"^I",33,"^R",1,"^W",true,"^K",["^L",["^M",["^L",[[["^ ","^Z",["^["],"^N","^C"]]]]]],"^10","Internal implementation for the public function current-time, which works\n   on atom-wrapped clocks.\n   This internal version works on non-atom-wrapped clocks."],"~$execute!",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca/src/mecca/music/time.cljs","^G",137,"^H",8,"^I",137,"^J",16,"^Y",true,"^K",["^L",["^M",["^L",[[["^ ","^Z",["~$action","~$clock-id","~$latest-time","~$deadline","~$repeat-time"],"^N","~$event"]]]]]]],"^Y",true,"^<","~$mecca.music.time/execute!","^Q",false,"^F","src/mecca/music/time.cljs","^J",16,"^S",["^L",[["~$p__16860"]]],"^V",null,"^T",["^L",[null,null]],"^H",1,"^G",137,"^I",137,"^R",1,"^W",true,"^K",["^L",["^M",["^L",[[["^ ","^Z",["^14","^15","^16","^17","^18"],"^N","^19"]]]]]]],"~$start!",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca/src/mecca/music/time.cljs","^G",216,"^H",7,"^I",216,"^J",13,"^K",["^L",["^M",["^L",[["^C"]]]]],"^10","Remove all scheduled events and start the clock."],"^<","~$mecca.music.time/start!","^Q",false,"^F","src/mecca/music/time.cljs","^J",13,"^S",["^L",[["^C"]]],"^V",null,"^T",["^L",[null,null]],"^H",1,"^G",216,"^I",216,"^R",1,"^W",true,"^K",["^L",["^M",["^L",[["^C"]]]]],"^10","Remove all scheduled events and start the clock."],"~$schedule!",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca/src/mecca/music/time.cljs","^G",128,"^H",8,"^I",128,"^J",17,"^Y",true,"^K",["^L",["^M",["^L",[[["^ ","^Z",["^15"],"^N","^19"],"~$new-deadline"]]]]],"^10","Schedule a copy of an event with a new deadline."],"^Y",true,"^<","~$mecca.music.time/schedule!","^Q",false,"^F","src/mecca/music/time.cljs","^J",17,"^S",["^L",[["~$p__16857","^1?"]]],"^V",null,"^T",["^L",[null,null]],"^H",1,"^G",128,"^I",128,"^R",2,"^W",true,"^K",["^L",["^M",["^L",[[["^ ","^Z",["^15"],"^N","^19"],"^1?"]]]]],"^10","Schedule a copy of an event with a new deadline."],"~$default-options",["^ ","^<","~$mecca.music.time/default-options","^F","src/mecca/music/time.cljs","^G",8,"^H",1,"^I",8,"^J",21,"^E",["^ ","^F","/home/porky/mecca/src/mecca/music/time.cljs","^G",8,"^H",6,"^I",8,"^J",21],"~:tag","~$cljs.core/IMap"],"~$*clocks*",["^ ","^<","~$mecca.music.time/*clocks*","^F","src/mecca/music/time.cljs","^G",13,"^H",1,"^I",13,"^J",24,"~:dynamic",true,"^E",["^ ","^F","/home/porky/mecca/src/mecca/music/time.cljs","^G",13,"^H",16,"^I",13,"^J",24,"^1H",true],"^1D","^1E"],"~$current-time",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca/src/mecca/music/time.cljs","^G",40,"^H",7,"^I",40,"^J",19,"^K",["^L",["^M",["^L",[["^C"]]]]],"^10","Returns the current time of a clock's audio context, in milliseconds."],"^<","~$mecca.music.time/current-time","^Q",false,"^F","src/mecca/music/time.cljs","^J",19,"^S",["^L",[["^C"]]],"^V",null,"^T",["^L",[null,null]],"^H",1,"^G",40,"^I",40,"^R",1,"^W",true,"^K",["^L",["^M",["^L",[["^C"]]]]],"^10","Returns the current time of a clock's audio context, in milliseconds."],"~$time-stretch!",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca/src/mecca/music/time.cljs","^G",196,"^H",7,"^I",196,"^J",20,"^K",["^L",["^M",["^L",[["~$e","~$ratio"],["~$e","~$time-reference","^1L"]]]]],"^10","Reschedules events according to a `time-reference` and a `ratio`.\n   If the event is a repeating event, adjusts its repeat-time accordingly.\n   The first argument can be either a single event or a list of events.\n   Returns the rescheduled event, or a list of rescheduled events, depending\n   on the input type.\n   e.g.\n   (time-stretch! e (current-time clock) 0.5)\n   ^-- makes an event `e` occur twice as soon as it would otherwise\n   If `time-reference` is omitted, the default value is the current time of the\n   event's clock.","^P",["^ ","^Q",false,"^R",3,"^S",["^L",[["~$e","^1L"],["~$e","^1M","^1L"]]],"^K",["^L",[["~$e","^1L"],["~$e","^1M","^1L"]]],"^T",["^L",[null,null]]]],"^<","~$mecca.music.time/time-stretch!","^Q",false,"^F","src/mecca/music/time.cljs","^J",20,"^P",["^ ","^Q",false,"^R",3,"^S",["^L",[["~$e","^1L"],["~$e","^1M","^1L"]]],"^K",["^L",[["~$e","^1L"],["~$e","^1M","^1L"]]],"^T",["^L",[null,null]]],"^S",["^L",[["~$e","^1L"],["~$e","^1M","^1L"]]],"^V",null,"^T",["^L",[null,null]],"^H",1,"^G",196,"^I",196,"^R",3,"^W",true,"^K",["^L",[["~$e","^1L"],["~$e","^1M","^1L"]]],"^10","Reschedules events according to a `time-reference` and a `ratio`.\n   If the event is a repeating event, adjusts its repeat-time accordingly.\n   The first argument can be either a single event or a list of events.\n   Returns the rescheduled event, or a list of rescheduled events, depending\n   on the input type.\n   e.g.\n   (time-stretch! e (current-time clock) 0.5)\n   ^-- makes an event `e` occur twice as soon as it would otherwise\n   If `time-reference` is omitted, the default value is the current time of the\n   event's clock."],"~$schedule*",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca/src/mecca/music/time.cljs","^G",122,"^H",8,"^I",122,"^J",17,"^Y",true,"^K",["^L",["^M",["^L",[["~$events","^19","^1?"]]]]],"^10","Insert a copy of an event into an event queue with a new deadline."],"^Y",true,"^<","~$mecca.music.time/schedule*","^Q",false,"^F","src/mecca/music/time.cljs","^J",17,"^S",["^L",[["^1P","^19","^1?"]]],"^V",null,"^T",["^L",[null,null]],"^H",1,"^G",122,"^I",122,"^R",3,"^W",true,"^K",["^L",["^M",["^L",[["^1P","^19","^1?"]]]]],"^10","Insert a copy of an event into an event queue with a new deadline."],"~$repeat!",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca/src/mecca/music/time.cljs","^G",170,"^H",7,"^I",170,"^J",14,"^K",["^L",["^M",["^L",[[["^ ","^Z",["^17"],"^N","^19"],"~$time"]]]]],"^10","Sets the event to repeat every `time` milliseconds "],"^<","~$mecca.music.time/repeat!","^Q",false,"^F","src/mecca/music/time.cljs","^J",14,"^S",["^L",[["~$p__16890","^1S"]]],"^V",null,"^T",["^L",[null,null]],"^H",1,"^G",170,"^I",170,"^R",2,"^W",true,"^K",["^L",["^M",["^L",[[["^ ","^Z",["^17"],"^N","^19"],"^1S"]]]]],"^10","Sets the event to repeat every `time` milliseconds "],"~$event*",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca/src/mecca/music/time.cljs","^G",55,"^H",8,"^I",55,"^J",14,"^Y",true,"^K",["^L",["^M",["^L",[[["^ ","^Z",["~$id","^15","^C","^17","~$tolerance-early","~$tolerance-late"],"^N","^19"]]]]]],"^10","Constructor for an event. Requires `action`, `clock` (as an atom) and\n   `deadline` at the minimum.\n   Assigns a randomly generated id for the event if an :id is not provided to\n   the constructor. This is useful for removing and repeating events.\n   The tolerance interval (:latest-time and :earliest-time) is calculated\n   based on the deadline and :tolerance-early and :tolerance-late, which are\n   either provided as keyword arguments, or taken from the clock's options."],"^Y",true,"^<","~$mecca.music.time/event*","^Q",false,"^F","src/mecca/music/time.cljs","^J",14,"^S",["^L",[["~$p__16805"]]],"^V",null,"^T",["^L",[null,null]],"^H",1,"^G",55,"^I",55,"^R",1,"^W",true,"^K",["^L",["^M",["^L",[[["^ ","^Z",["^1W","^15","^C","^17","^1X","^1Y"],"^N","^19"]]]]]],"^10","Constructor for an event. Requires `action`, `clock` (as an atom) and\n   `deadline` at the minimum.\n   Assigns a randomly generated id for the event if an :id is not provided to\n   the constructor. This is useful for removing and repeating events.\n   The tolerance interval (:latest-time and :earliest-time) is calculated\n   based on the deadline and :tolerance-early and :tolerance-late, which are\n   either provided as keyword arguments, or taken from the clock's options."],"~$relative-time",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca/src/mecca/music/time.cljs","^G",50,"^H",8,"^I",50,"^J",21,"^Y",true,"^K",["^L",["^M",["^L",[["^C","~$abs-time"]]]]],"^10","Converts from absolute -> relative time."],"^Y",true,"^<","~$mecca.music.time/relative-time","^Q",false,"^F","src/mecca/music/time.cljs","^J",21,"^S",["^L",[["^C","^21"]]],"^V",null,"^T",["^L",[null,null]],"^H",1,"^G",50,"^I",50,"^R",2,"^W",true,"^K",["^L",["^M",["^L",[["^C","^21"]]]]],"^10","Converts from absolute -> relative time."],"~$set-timeout!",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca/src/mecca/music/time.cljs","^G",147,"^H",7,"^I",147,"^J",19,"^K",["^L",["^M",["^L",[["^C","~$f","~$delay","~$&",["^ ","^N","~$opts"]]]]]],"^10","Schedules `f` after `delay` milliseconds. Returns the event.\n   `opts` may contain :tolerance-early and :tolerance-late for optionally\n   overriding the clock's timing window for events.","^P",["^ ","^Q",true,"^R",3,"^S",[["^L",["^C","~$f","^24",["^ ","^N","^25"]]]],"^K",["^L",[["^C","~$f","^24","~$&",["^ ","^N","^25"]]]],"^T",["^L",[null]]]],"^<","~$mecca.music.time/set-timeout!","^Q",true,"^F","src/mecca/music/time.cljs","^J",19,"^P",["^ ","^Q",true,"^R",3,"^S",[["^L",["^C","~$f","^24",["^ ","^N","^25"]]]],"^K",["^L",[["^C","~$f","^24","~$&",["^ ","^N","^25"]]]],"^T",["^L",[null]]],"^S",[["^L",["^C","~$f","^24",["^ ","^N","^25"]]]],"^V",null,"^T",["^L",[null]],"^H",1,"^G",147,"^I",147,"^R",3,"^W",true,"^K",["^L",[["^C","~$f","^24","~$&",["^ ","^N","^25"]]]],"^10","Schedules `f` after `delay` milliseconds. Returns the event.\n   `opts` may contain :tolerance-early and :tolerance-late for optionally\n   overriding the clock's timing window for events."],"~$create-event!",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca/src/mecca/music/time.cljs","^G",112,"^H",8,"^I",112,"^J",21,"^Y",true,"^K",["^L",["^M",["^L",[["^C","~$f","^17","~$&",[["^ ","^N","^25"]]]]]]],"^10","Create an event and insert into a clock's event queue.","^P",["^ ","^Q",true,"^R",3,"^S",[["^L",["^C","~$f","^17",[["^ ","^N","^25"]]]]],"^K",["^L",[["^C","~$f","^17","~$&",[["^ ","^N","^25"]]]]],"^T",["^L",[null]]]],"^Y",true,"^<","~$mecca.music.time/create-event!","^Q",true,"^F","src/mecca/music/time.cljs","^J",21,"^P",["^ ","^Q",true,"^R",3,"^S",[["^L",["^C","~$f","^17",[["^ ","^N","^25"]]]]],"^K",["^L",[["^C","~$f","^17","~$&",[["^ ","^N","^25"]]]]],"^T",["^L",[null]]],"^S",[["^L",["^C","~$f","^17",[["^ ","^N","^25"]]]]],"^V",null,"^T",["^L",[null]],"^H",1,"^G",112,"^I",112,"^R",3,"^W",true,"^K",["^L",[["^C","~$f","^17","~$&",[["^ ","^N","^25"]]]]],"^10","Create an event and insert into a clock's event queue."],"~$stop!",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca/src/mecca/music/time.cljs","^G",228,"^H",7,"^I",228,"^J",12,"^K",["^L",["^M",["^L",[["^C"]]]]],"^10","Stops the clock."],"^<","~$mecca.music.time/stop!","^Q",false,"^F","src/mecca/music/time.cljs","^J",12,"^S",["^L",[["^C"]]],"^V",null,"^T",["^L",[null,null]],"^H",1,"^G",228,"^I",228,"^R",1,"^W",true,"^K",["^L",["^M",["^L",[["^C"]]]]],"^10","Stops the clock."],"~$clear!",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca/src/mecca/music/time.cljs","^G",161,"^H",7,"^I",161,"^J",13,"^K",["^L",["^M",["^L",[[["^ ","^Z",["^15"],"^N","^19"]]]]]],"^10","Unschedules an event by removing it from its clock's event queue."],"^<","~$mecca.music.time/clear!","^Q",false,"^F","src/mecca/music/time.cljs","^J",13,"^S",["^L",[["~$p__16884"]]],"^V",null,"^T",["^L",[null,null]],"^H",1,"^G",161,"^I",161,"^R",1,"^W",true,"^K",["^L",["^M",["^L",[[["^ ","^Z",["^15"],"^N","^19"]]]]]],"^10","Unschedules an event by removing it from its clock's event queue."],"~$tick!",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca/src/mecca/music/time.cljs","^G",79,"^H",8,"^I",79,"^J",13,"^Y",true,"^K",["^L",["^M",["^L",[["^C"]]]]],"^10","This function is ran periodically, and at each tick it executes\n   events for which `currentTime` is included in their tolerance interval."],"^Y",true,"^<","~$mecca.music.time/tick!","^Q",false,"^F","src/mecca/music/time.cljs","^J",13,"^S",["^L",[["^C"]]],"^V",null,"^T",["^L",[null,null]],"^H",1,"^G",79,"^I",79,"^R",1,"^W",true,"^K",["^L",["^M",["^L",[["^C"]]]]],"^10","This function is ran periodically, and at each tick it executes\n   events for which `currentTime` is included in their tolerance interval."],"~$callback-at-time!",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca/src/mecca/music/time.cljs","^G",154,"^H",7,"^I",154,"^J",24,"^K",["^L",["^M",["^L",[["^C","~$f","^17","~$&",["^ ","^N","^25"]]]]]],"^10","Schedules `f` to run before `deadline`. Returns the event.\n   `opts` may contain :tolerance-early and :tolerance-late for optionally\n   overriding the clock's timing window for events.","^P",["^ ","^Q",true,"^R",3,"^S",[["^L",["^C","~$f","^17",["^ ","^N","^25"]]]],"^K",["^L",[["^C","~$f","^17","~$&",["^ ","^N","^25"]]]],"^T",["^L",[null]]]],"^<","~$mecca.music.time/callback-at-time!","^Q",true,"^F","src/mecca/music/time.cljs","^J",24,"^P",["^ ","^Q",true,"^R",3,"^S",[["^L",["^C","~$f","^17",["^ ","^N","^25"]]]],"^K",["^L",[["^C","~$f","^17","~$&",["^ ","^N","^25"]]]],"^T",["^L",[null]]],"^S",[["^L",["^C","~$f","^17",["^ ","^N","^25"]]]],"^V",null,"^T",["^L",[null]],"^H",1,"^G",154,"^I",154,"^R",3,"^W",true,"^K",["^L",[["^C","~$f","^17","~$&",["^ ","^N","^25"]]]],"^10","Schedules `f` to run before `deadline`. Returns the event.\n   `opts` may contain :tolerance-early and :tolerance-late for optionally\n   overriding the clock's timing window for events."],"~$index-by-time",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca/src/mecca/music/time.cljs","^G",91,"^H",8,"^I",91,"^J",21,"^Y",true,"^K",["^L",["^M",["^L",[["^1P","^17"]]]]],"^10","Does a binary search to find the index of the first event whose deadline is\n   >= `deadline`."],"^Y",true,"^<","~$mecca.music.time/index-by-time","^Q",false,"^F","src/mecca/music/time.cljs","^J",21,"^S",["^L",[["^1P","^17"]]],"^V",null,"^T",["^L",[null,null]],"^H",1,"^G",91,"^I",91,"^R",2,"^W",true,"^K",["^L",["^M",["^L",[["^1P","^17"]]]]],"^10","Does a binary search to find the index of the first event whose deadline is\n   >= `deadline`."],"~$absolute-time",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca/src/mecca/music/time.cljs","^G",45,"^H",8,"^I",45,"^J",21,"^Y",true,"^K",["^L",["^M",["^L",[["^C","~$rel-time"]]]]],"^10","Converts from relative -> absolute time."],"^Y",true,"^<","~$mecca.music.time/absolute-time","^Q",false,"^F","src/mecca/music/time.cljs","^J",21,"^S",["^L",[["^C","^2E"]]],"^V",null,"^T",["^L",[null,null]],"^H",1,"^G",45,"^I",45,"^R",2,"^W",true,"^K",["^L",["^M",["^L",[["^C","^2E"]]]]],"^10","Converts from relative -> absolute time."],"~$time-stretch!*",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca/src/mecca/music/time.cljs","^G",178,"^H",8,"^I",178,"^J",22,"^Y",true,"^K",["^L",["^M",["^L",[[["^ ","^Z",["^18","^15","^17","~$earliest-time"],"^N","^19"],"^1M","^1L"]]]]],"^10","Internal implementation for time-stretching a single event."],"^Y",true,"^<","~$mecca.music.time/time-stretch!*","^Q",false,"^F","src/mecca/music/time.cljs","^J",22,"^S",["^L",[["~$p__16894","^1M","^1L"]]],"^V",null,"^T",["^L",[null,null]],"^H",1,"^G",178,"^I",178,"^R",3,"^W",true,"^K",["^L",["^M",["^L",[[["^ ","^Z",["^18","^15","^17","^2H"],"^N","^19"],"^1M","^1L"]]]]],"^10","Internal implementation for time-stretching a single event."],"~$insert-event",["^ ","^D",null,"^E",["^ ","^F","/home/porky/mecca/src/mecca/music/time.cljs","^G",106,"^H",8,"^I",106,"^J",20,"^Y",true,"^K",["^L",["^M",["^L",[["^1P",["^ ","^Z",["^2H"],"^N","^19"]]]]]],"^10","Insert an event into an event queue, properly sorted by deadline."],"^Y",true,"^<","~$mecca.music.time/insert-event","^Q",false,"^F","src/mecca/music/time.cljs","^J",20,"^S",["^L",[["^1P","~$p__16841"]]],"^V",null,"^T",["^L",[null,null]],"^H",1,"^G",106,"^I",106,"^R",2,"^W",true,"^K",["^L",["^M",["^L",[["^1P",["^ ","^Z",["^2H"],"^N","^19"]]]]]],"^10","Insert an event into an event queue, properly sorted by deadline."],"~$*audio-context*",["^ ","^<","~$mecca.music.time/*audio-context*","^F","src/mecca/music/time.cljs","^G",3,"^H",1,"^I",3,"^J",31,"^1H",true,"^E",["^ ","^F","/home/porky/mecca/src/mecca/music/time.cljs","^G",3,"^H",16,"^I",3,"^J",31,"^1H",true],"^1D","~$ctx"]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^;",["~:higher","~:started","~:tolerance-early","~:current-time","~:clock-node","~:events","~:repeat-time","~:tolerance-late","~:earliest-time","~:latest-time","~:id","~:lower","~:context","~:action","~:clock","^19","~:deadline","~:clock-id"]],"~:order",["^35","^30","^2W","^33","^2Z","^2V","^39","^37","^38","^19","^32","^31","^2X","^2U","^34","^36","^2[","^2Y"]],"^10",null]