["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$mecca.audio.melody","~:imports",null,"~:requires",["^ ","~$rf","~$re-frame.core","^<","^<","~$scale","~$mecca.audio.scale","^>","^>"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$subscribe","^<","~$dispatch","^<"],"~:defs",["^ ","~$mapthen",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/porky/mecca/src/mecca/audio/melody.cljs","~:line",140,"~:column",7,"~:end-line",140,"~:end-column",14,"~:arglists",["~#list",["~$quote",["^M",[["~$f","~$&","~$melodies"]]]]],"~:top-fn",["^ ","~:variadic",true,"~:max-fixed-arity",1,"~:method-params",[["^M",["~$f","^O"]]],"^L",["^M",[["~$f","~$&","^O"]]],"~:arglists-meta",["^M",[null]]]],"^7","~$mecca.audio.melody/mapthen","^Q",true,"^G","src/mecca/audio/melody.cljs","^K",14,"^P",["^ ","^Q",true,"^R",1,"^S",[["^M",["~$f","^O"]]],"^L",["^M",[["~$f","~$&","^O"]]],"^T",["^M",[null]]],"^S",[["^M",["~$f","^O"]]],"~:protocol-impl",null,"^T",["^M",[null]],"^I",1,"^H",140,"^J",140,"^R",1,"~:fn-var",true,"^L",["^M",[["~$f","~$&","^O"]]]],"~$tempo",["^ ","^E",null,"^F",["^ ","^G","/home/porky/mecca/src/mecca/audio/melody.cljs","^H",155,"^I",7,"^J",155,"^K",12,"^L",["^M",["^N",["^M",[["~$timing","~$notes"]]]]],"~:doc","Transform both :time and :duration according to timing.\n  e.g. (->> notes (tempo (bpm 120)))"],"^7","~$mecca.audio.melody/tempo","^Q",false,"^G","src/mecca/audio/melody.cljs","^K",12,"^S",["^M",[["^Y","^Z"]]],"^V",null,"^T",["^M",[null,null]],"^I",1,"^H",155,"^J",155,"^R",2,"^W",true,"^L",["^M",["^N",["^M",[["^Y","^Z"]]]]],"^[","Transform both :time and :duration according to timing.\n  e.g. (->> notes (tempo (bpm 120)))"],"~$bpm",["^ ","^E",null,"^F",["^ ","^G","/home/porky/mecca/src/mecca/audio/melody.cljs","^H",22,"^I",7,"^J",22,"^K",10,"^L",["^M",["^N",["^M",[["~$beats"]]]]],"^[","Returns a function that translates a beat number into seconds.\n  e.g. ((bpm 90) 5)"],"^7","~$mecca.audio.melody/bpm","^Q",false,"^G","src/mecca/audio/melody.cljs","^K",10,"^S",["^M",[["^12"]]],"^V",null,"^T",["^M",[null,null]],"^I",1,"^H",22,"^J",22,"^R",1,"^W",true,"^L",["^M",["^N",["^M",[["^12"]]]]],"^[","Returns a function that translates a beat number into seconds.\n  e.g. ((bpm 90) 5)"],"~$chromatic->diatonic",["^ ","^E",null,"^F",["^ ","^G","/home/porky/mecca/src/mecca/audio/melody.cljs","^H",18,"^I",7,"^J",18,"^K",26,"^L",["^M",["^N",["^M",[["~$interval"]]]]]],"^7","~$mecca.audio.melody/chromatic->diatonic","^Q",false,"^G","src/mecca/audio/melody.cljs","^K",26,"^S",["^M",[["^15"]]],"^V",null,"^T",["^M",[null,null]],"^I",1,"^H",18,"^J",18,"^R",1,"^W",true,"^L",["^M",["^N",["^M",[["^15"]]]]]],"~$but",["^ ","^E",null,"^F",["^ ","^G","/home/porky/mecca/src/mecca/audio/melody.cljs","^H",108,"^I",7,"^J",108,"^K",10,"^L",["^M",["^N",["^M",[["~$start","~$end","~$variation","^Z"]]]]],"^[","Replaces part of a melody with another.\n  e.g. (->> notes (but 2 4 variation))"],"^7","~$mecca.audio.melody/but","^Q",false,"^G","src/mecca/audio/melody.cljs","^K",10,"^S",["^M",[["^18","^19","^1:","^Z"]]],"^V",null,"^T",["^M",[null,null]],"^I",1,"^H",108,"^J",108,"^R",4,"^W",true,"^L",["^M",["^N",["^M",[["^18","^19","^1:","^Z"]]]]],"^[","Replaces part of a melody with another.\n  e.g. (->> notes (but 2 4 variation))"],"~$having",["^ ","^E",null,"^F",["^ ","^G","/home/porky/mecca/src/mecca/audio/melody.cljs","^H",27,"^I",7,"^J",27,"^K",13,"^L",["^M",["^N",["^M",[["~$k","~$values","^Z"]]]]],"^[","Zips an arbitrary quality onto a melody.\n  e.g. (->> (rhythm [1 1/2]) (having :drum [:kick :snare]))"],"^7","~$mecca.audio.melody/having","^Q",false,"^G","src/mecca/audio/melody.cljs","^K",13,"^S",["^M",[["~$k","^1=","^Z"]]],"^V",null,"^T",["^M",[null,null]],"^I",1,"^H",27,"^J",27,"^R",3,"^W",true,"^L",["^M",["^N",["^M",[["~$k","^1=","^Z"]]]]],"^[","Zips an arbitrary quality onto a melody.\n  e.g. (->> (rhythm [1 1/2]) (having :drum [:kick :snare]))"],"~$scale-degrees",["^ ","^E",null,"^F",["^ ","^G","/home/porky/mecca/src/mecca/audio/melody.cljs","^H",14,"^I",7,"^J",14,"^K",20,"^L",["^M",["^N",["^M",[["^="]]]]]],"^7","~$mecca.audio.melody/scale-degrees","^Q",false,"^G","src/mecca/audio/melody.cljs","^K",20,"^S",["^M",[["^="]]],"^V",null,"^T",["^M",[null,null]],"^I",1,"^H",14,"^J",14,"^R",1,"^W",true,"^L",["^M",["^N",["^M",[["^="]]]]]],"~$where",["^ ","^E",null,"^F",["^ ","^G","/home/porky/mecca/src/mecca/audio/melody.cljs","^H",79,"^I",7,"^J",79,"^K",12,"^L",["^M",["^N",["^M",[["~$k","~$f","^Z"]]]]],"^[","Applies f to the k key of each note in notes, ignoring missing keys.\n  e.g. (->> notes (where :time (bpm 90)))"],"^7","~$mecca.audio.melody/where","^Q",false,"^G","src/mecca/audio/melody.cljs","^K",12,"^S",["^M",[["~$k","~$f","^Z"]]],"^V",null,"^T",["^M",[null,null]],"^I",1,"^H",79,"^J",79,"^R",3,"^W",true,"^L",["^M",["^N",["^M",[["~$k","~$f","^Z"]]]]],"^[","Applies f to the k key of each note in notes, ignoring missing keys.\n  e.g. (->> notes (where :time (bpm 90)))"],"~$is",["^ ","^7","~$mecca.audio.melody/is","^G","src/mecca/audio/melody.cljs","^H",65,"^I",1,"^J",65,"^K",8,"^F",["^ ","^G","/home/porky/mecca/src/mecca/audio/melody.cljs","^H",65,"^I",6,"^J",65,"^K",8],"^[","Synonym for constantly.\n  e.g. (->> notes (wherever (comp not :part), :part (is :bass)))"],"~$times",["^ ","^E",null,"^F",["^ ","^G","/home/porky/mecca/src/mecca/audio/melody.cljs","^H",147,"^I",7,"^J",147,"^K",12,"^L",["^M",["^N",["^M",[["~$n","^Z"]]]]],"^[","Repeats notes n times.\n  e.g. (->> bassline (times 4))"],"^7","~$mecca.audio.melody/times","^Q",false,"^G","src/mecca/audio/melody.cljs","^K",12,"^S",["^M",[["~$n","^Z"]]],"^V",null,"^T",["^M",[null,null]],"^I",1,"^H",147,"^J",147,"^R",2,"^W",true,"^L",["^M",["^N",["^M",[["~$n","^Z"]]]]],"^[","Repeats notes n times.\n  e.g. (->> bassline (times 4))"],"~$duration",["^ ","^E",null,"^F",["^ ","^G","/home/porky/mecca/src/mecca/audio/melody.cljs","^H",123,"^I",7,"^J",123,"^K",15,"^L",["^M",["^N",["^M",[["^Z"]]]]],"^[","Returns the total duration of notes.\n  e.g. (->> melody duration)"],"^7","~$mecca.audio.melody/duration","^Q",false,"^G","src/mecca/audio/melody.cljs","^K",15,"^S",["^M",[["^Z"]]],"^V",null,"^T",["^M",[null,null]],"^I",1,"^H",123,"^J",123,"^R",1,"^W",true,"^L",["^M",["^N",["^M",[["^Z"]]]]],"^[","Returns the total duration of notes.\n  e.g. (->> melody duration)"],"~$all",["^ ","^E",null,"^F",["^ ","^G","/home/porky/mecca/src/mecca/audio/melody.cljs","^H",85,"^I",7,"^J",85,"^K",10,"^L",["^M",["^N",["^M",[["~$k","~$v","^Z"]]]]],"^[","Sets a constant value for each note of a melody.\n  e.g. (->> notes (all :part :drum))"],"^7","~$mecca.audio.melody/all","^Q",false,"^G","src/mecca/audio/melody.cljs","^K",10,"^S",["^M",[["~$k","~$v","^Z"]]],"^V",null,"^T",["^M",[null,null]],"^I",1,"^H",85,"^J",85,"^R",3,"^W",true,"^L",["^M",["^N",["^M",[["~$k","~$v","^Z"]]]]],"^[","Sets a constant value for each note of a melody.\n  e.g. (->> notes (all :part :drum))"],"~$scales",["^ ","^7","~$mecca.audio.melody/scales","^G","src/mecca/audio/melody.cljs","^H",6,"^I",1,"^J",6,"^K",12,"^F",["^ ","^G","/home/porky/mecca/src/mecca/audio/melody.cljs","^H",6,"^I",6,"^J",6,"^K",12],"~:tag","~$cljs.core/IMap"],"~$utter",["^ ","^E",null,"^F",["^ ","^G","/home/porky/mecca/src/mecca/audio/melody.cljs","^H",33,"^I",7,"^J",33,"^K",12,"^L",["^M",["^N",["^M",[["~$object","~$time","^1G","~$velocity"]]]]]],"^7","~$mecca.audio.melody/utter","^Q",false,"^G","src/mecca/audio/melody.cljs","^K",12,"^S",["^M",[["^1P","^1Q","^1G","^1R"]]],"^V",null,"^T",["^M",[null,null]],"^I",1,"^H",33,"^J",33,"^R",4,"^W",true,"^L",["^M",["^N",["^M",[["^1P","^1Q","^1G","^1R"]]]]]],"~$before?",["^ ","^E",null,"^F",["^ ","^G","/home/porky/mecca/src/mecca/audio/melody.cljs","^H",96,"^I",8,"^J",96,"^K",15,"~:private",true,"^L",["^M",["^N",["^M",[["~$a","~$b"]]]]]],"^1U",true,"^7","~$mecca.audio.melody/before?","^Q",false,"^G","src/mecca/audio/melody.cljs","^K",15,"^S",["^M",[["~$a","~$b"]]],"^V",null,"^T",["^M",[null,null]],"^I",1,"^H",96,"^J",96,"^R",2,"^W",true,"^L",["^M",["^N",["^M",[["~$a","~$b"]]]]]],"~$if-applicable",["^ ","^E",null,"^F",["^ ","^G","/home/porky/mecca/src/mecca/audio/melody.cljs","^H",70,"^I",8,"^J",70,"^K",21,"^1U",true,"^L",["^M",["^N",["^M",[["~$applies?","~$f"]]]]]],"^1U",true,"^7","~$mecca.audio.melody/if-applicable","^Q",false,"^G","src/mecca/audio/melody.cljs","^K",21,"^S",["^M",[["^1X","~$f"]]],"^V",null,"^T",["^M",[null,null]],"^I",1,"^H",70,"^J",70,"^R",2,"^W",true,"^L",["^M",["^N",["^M",[["^1X","~$f"]]]]]],"~$accelerando",["^ ","^E",null,"^F",["^ ","^G","/home/porky/mecca/src/mecca/audio/melody.cljs","^H",166,"^I",7,"^J",166,"^K",18,"^L",["^M",["^N",["^M",[["~$from","~$to","~$by"]]]]],"^[","Linearly interpolated change between from and to.\n  e.g. (->> notes (tempo (accelerando 0 4 3/2))))"],"^7","~$mecca.audio.melody/accelerando","^Q",false,"^G","src/mecca/audio/melody.cljs","^K",18,"^S",["^M",[["^1[","^20","^21"]]],"^V",null,"^T",["^M",[null,null]],"^I",1,"^H",166,"^J",166,"^R",3,"^W",true,"^L",["^M",["^N",["^M",[["^1[","^20","^21"]]]]],"^[","Linearly interpolated change between from and to.\n  e.g. (->> notes (tempo (accelerando 0 4 3/2))))"],"~$after",["^ ","^E",null,"^F",["^ ","^G","/home/porky/mecca/src/mecca/audio/melody.cljs","^H",91,"^I",7,"^J",91,"^K",12,"^L",["^M",["^N",["^M",[["~$wait","^Z"]]]]],"^[","Delay notes by wait.\n  e.g. (->> melody (after 3))"],"^7","~$mecca.audio.melody/after","^Q",false,"^G","src/mecca/audio/melody.cljs","^K",12,"^S",["^M",[["^24","^Z"]]],"^V",null,"^T",["^M",[null,null]],"^I",1,"^H",91,"^J",91,"^R",2,"^W",true,"^L",["^M",["^N",["^M",[["^24","^Z"]]]]],"^[","Delay notes by wait.\n  e.g. (->> melody (after 3))"],"~$phrase",["^ ","^E",null,"^F",["^ ","^G","/home/porky/mecca/src/mecca/audio/melody.cljs","^H",40,"^I",7,"^J",40,"^K",13,"^L",["^M",["^N",["^M",[["~$durations","~$pitches","~$velocities"],["^27","^28"]]]]],"^[","Translates a sequence of durations and pitches into a melody.\n  nil pitches signify rests, vectors represent clusters, and maps\n  represent chords. Vector durations represent repeated notes.\n  e.g. (phrase [1/2 1/2 3/2 3/2] [0 1 nil 4])\n  (phrase [1 1 2] [4 3 [0 2]])\n  (phrase [1 [1 2]] [4 3])\n  (phrase (repeat 4) (map #(-> triad (root %))) [0 3 4 3])","^P",["^ ","^Q",false,"^R",3,"^S",["^M",[["^27","^28","^29"],["^27","^28"]]],"^L",["^M",[["^27","^28","^29"],["^27","^28"]]],"^T",["^M",[null,null]]]],"^7","~$mecca.audio.melody/phrase","^Q",false,"^G","src/mecca/audio/melody.cljs","^K",13,"^P",["^ ","^Q",false,"^R",3,"^S",["^M",[["^27","^28","^29"],["^27","^28"]]],"^L",["^M",[["^27","^28","^29"],["^27","^28"]]],"^T",["^M",[null,null]]],"^S",["^M",[["^27","^28","^29"],["^27","^28"]]],"^V",null,"^T",["^M",[null,null]],"^I",1,"^H",40,"^J",40,"^R",3,"^W",true,"^L",["^M",[["^27","^28","^29"],["^27","^28"]]],"^[","Translates a sequence of durations and pitches into a melody.\n  nil pitches signify rests, vectors represent clusters, and maps\n  represent chords. Vector durations represent repeated notes.\n  e.g. (phrase [1/2 1/2 3/2 3/2] [0 1 nil 4])\n  (phrase [1 1 2] [4 3 [0 2]])\n  (phrase [1 [1 2]] [4 3])\n  (phrase (repeat 4) (map #(-> triad (root %))) [0 3 4 3])"],"~$with",["^ ","^E",null,"^F",["^ ","^G","/home/porky/mecca/src/mecca/audio/melody.cljs","^H",97,"^I",7,"^J",97,"^K",11,"^L",["^M",["^N",["^M",[[["~$a","~$&","~$other-as","~:as","~$as"],["~$b","~$&","~$other-bs","^2=","~$bs"]],["^2>","^2@","~$&","~$others"]]]]],"^[","Blends melodies.\n  e.g. (->> melody (with bass drums))","^P",["^ ","^Q",true,"^R",2,"^S",["^M",[[["~$a","~$&","^2<","^2=","^2>"],["~$b","~$&","^2?","^2=","^2@"]]]],"^L",["^M",[[["~$a","~$&","^2<","^2=","^2>"],["~$b","~$&","^2?","^2=","^2@"]],["^2>","^2@","~$&","^2A"]]],"^T",["^M",[null,null]]]],"^7","~$mecca.audio.melody/with","^Q",true,"^G","src/mecca/audio/melody.cljs","^K",11,"^P",["^ ","^Q",true,"^R",2,"^S",["^M",[[["~$a","~$&","^2<","^2=","^2>"],["~$b","~$&","^2?","^2=","^2@"]]]],"^L",["^M",[[["~$a","~$&","^2<","^2=","^2>"],["~$b","~$&","^2?","^2=","^2@"]],["^2>","^2@","~$&","^2A"]]],"^T",["^M",[null,null]]],"^S",["^M",[[["~$a","~$&","^2<","^2=","^2>"],["~$b","~$&","^2?","^2=","^2@"]]]],"^V",null,"^T",["^M",[null,null]],"^I",1,"^H",97,"^J",97,"^R",2,"^W",true,"^L",["^M",[[["~$a","~$&","^2<","^2=","^2>"],["~$b","~$&","^2?","^2=","^2@"]],["^2>","^2@","~$&","^2A"]]],"^[","Blends melodies.\n  e.g. (->> melody (with bass drums))"],"~$rhythm",["^ ","^E",null,"^F",["^ ","^G","/home/porky/mecca/src/mecca/audio/melody.cljs","^H",59,"^I",7,"^J",59,"^K",13,"^L",["^M",["^N",["^M",[["^27"]]]]],"^[","Translates a sequence of durations into a rhythm.\n  e.g. (rhythm [1 1 2])"],"^7","~$mecca.audio.melody/rhythm","^Q",false,"^G","src/mecca/audio/melody.cljs","^K",13,"^S",["^M",[["^27"]]],"^V",null,"^T",["^M",[null,null]],"^I",1,"^H",59,"^J",59,"^R",1,"^W",true,"^L",["^M",["^N",["^M",[["^27"]]]]],"^[","Translates a sequence of durations into a rhythm.\n  e.g. (rhythm [1 1 2])"],"~$then",["^ ","^E",null,"^F",["^ ","^G","/home/porky/mecca/src/mecca/audio/melody.cljs","^H",132,"^I",7,"^J",132,"^K",11,"^L",["^M",["^N",["^M",[["~$later","~$earlier"]]]]],"^[","Sequences later after earlier.\n  e.g. (->> call (then response))"],"^7","~$mecca.audio.melody/then","^Q",false,"^G","src/mecca/audio/melody.cljs","^K",11,"^S",["^M",[["^2F","^2G"]]],"^V",null,"^T",["^M",[null,null]],"^I",1,"^H",132,"^J",132,"^R",2,"^W",true,"^L",["^M",["^N",["^M",[["^2F","^2G"]]]]],"^[","Sequences later after earlier.\n  e.g. (->> call (then response))"],"~$wherever",["^ ","^E",null,"^F",["^ ","^G","/home/porky/mecca/src/mecca/audio/melody.cljs","^H",71,"^I",7,"^J",71,"^K",15,"^L",["^M",["^N",["^M",[["^1X","~$k","~$f","^Z"]]]]],"^[","Applies f to the k key of each note wherever condition? returns true.\n  e.g. (->> notes (wherever (comp not :part), :part (is :piano))"],"^7","~$mecca.audio.melody/wherever","^Q",false,"^G","src/mecca/audio/melody.cljs","^K",15,"^S",["^M",[["^1X","~$k","~$f","^Z"]]],"^V",null,"^T",["^M",[null,null]],"^I",1,"^H",71,"^J",71,"^R",4,"^W",true,"^L",["^M",["^N",["^M",[["^1X","~$k","~$f","^Z"]]]]],"^[","Applies f to the k key of each note wherever condition? returns true.\n  e.g. (->> notes (wherever (comp not :part), :part (is :piano))"]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^6",["~:scale","~:time","~:pitch","~:duration","~:otherwise","~:velocity"]],"~:order",["^2O","^2Q","^2P","^2R","^2T","^2S"]],"^[",null]